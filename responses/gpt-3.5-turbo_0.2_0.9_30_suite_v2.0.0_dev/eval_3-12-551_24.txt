Either wrap your custom appbar into a `PreferredSize` widget or implement `PreferredSizeWidget`. 

In your case, you can implement `PreferredSizeWidget` by adding a `preferredSize` property to your `AppBarDesign` class that returns the size of your custom app bar. Here's an example:

```dart
class AppBarDesign extends StatelessWidget implements PreferredSizeWidget {
  AppBarDesign({Key key, this.title}) : super(key: key);

  final String title;

  @override
  Widget build(BuildContext context) {
    return AppBar(
      title: Text(title),
    );
  }

  @override
  Size get preferredSize => Size.fromHeight(kToolbarHeight);
}
```

In this example, we added the `preferredSize` property that returns a `Size` object with the height of the app bar. We used the `kToolbarHeight` constant from the `material.dart` library to get the default height of an app bar.