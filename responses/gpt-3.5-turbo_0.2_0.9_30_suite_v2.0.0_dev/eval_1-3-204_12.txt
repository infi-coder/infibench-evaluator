The issue with your code is that `rename()` method is used to rename the index or column labels of a DataFrame. It does not rename a specific column. To rename a specific column, you can simply assign a new name to the column using the `rename()` method on the DataFrame.

Here's the modified code that should work for you:

```python
import pandas as pd
import numpy as np

def renameDataFrame(df):
    datain = np.loadtxt(datafile)
    df = pd.DataFrame(data=datain, columns=["t", "p", "x", "y", "z"])
    avg = df.groupby(["t"], sort=False)["p"].mean().reset_index(name="mean")
    return avg
```

In this code, we first group the DataFrame by "t" column and calculate the mean of "p" column. Then, we reset the index and rename the "p" column to "mean" using the `reset_index()` and `rename()` methods respectively. Finally, we return the modified DataFrame.

You can call this function by passing your original DataFrame as an argument:

```python
df = pd.DataFrame(data=datain, columns=["t", "p", "x", "y", "z"])
renamed_df = renameDataFrame(df)
```

This will return a new DataFrame with the "p" column renamed as "mean" and the average numbers grouped by "t" column.