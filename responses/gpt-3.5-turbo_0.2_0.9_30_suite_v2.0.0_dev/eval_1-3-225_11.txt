Here's the revised code for the `pig_latin` function:

```python
def pig_latin(text):
    words = text.split()
    pig_latin_words = []
    for word in words:
        endString = word[1:].capitalize() + word[0].lower() + 'ay'
        pig_latin_words.append(endString)
    return ' '.join(pig_latin_words)
```

Changes made:
- Instead of initializing an empty string `say`, we initialize an empty list `pig_latin_words` to store the pig Latin words.
- We use `word[1:].capitalize()` to get the rest of the word (excluding the first character) and capitalize the first letter of the resulting string.
- We use `word[0].lower()` to get the first character of the word and convert it to lowercase.
- We append the resulting pig Latin word to the `pig_latin_words` list.
- Finally, we join the pig Latin words using a space and return the resulting string.

Now, when you run the code, it should output the correct pig Latin translations for the given input strings.