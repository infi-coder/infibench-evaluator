Here's the revised code for the `pig_latin` function:

```python
def pig_latin(text):
  words = text.split()
  pig_latin_words = []
  for word in words:
    endString = word[1:].lower()
    startString = word[0].upper()
    pig_latin_words.append(endString + startString + 'ay')
  return ' '.join(pig_latin_words)
```

The changes made are:

1. Instead of initializing `say` to an empty string, we initialize an empty list `pig_latin_words` to store the pig Latin words.
2. We split the input `text` into words using the `split()` method.
3. For each word in `words`, we extract the substring starting from the second character using `word[1:]` and convert it to lowercase using the `lower()` method. We also extract the first character using `word[0]` and convert it to uppercase using the `upper()` method. We then concatenate these substrings with the string `'ay'` and append the resulting pig Latin word to `pig_latin_words`.
4. Finally, we join the pig Latin words in `pig_latin_words` using the string `' '` as the separator and return the resulting string.

With these changes, the `pig_latin` function should now correctly convert the input text into pig Latin.