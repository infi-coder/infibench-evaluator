The issue with your code is that you are trying to format a `LocalDate` object as a date-time string. `LocalDate` only contains the date information, but not the time information. To generate a random date and time, you can use the `LocalDateTime` class instead.

Here is an updated version of your code that generates a random `LocalDateTime` object and formats it in the desired format:

```java
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Random;

public class Main {
    public static void main(String[] args) {
        String randomDateTime = generateRandomDateAndTimeInString();
        System.out.println(randomDateTime);
    }

    public static String generateRandomDateAndTimeInString() {
        LocalDateTime dateTime = LocalDateTime.now()
                .minusYears(new Random().nextInt(70))
                .minusDays(new Random().nextInt(365))
                .minusHours(new Random().nextInt(24))
                .minusMinutes(new Random().nextInt(60))
                .minusSeconds(new Random().nextInt(60));
        return formatDate(dateTime);
    }

    public static String formatDate(LocalDateTime dateTime) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss'Z'");
        return dateTime.format(formatter);
    }
}
```

This code generates a random `LocalDateTime` object by subtracting a random number of years, days, hours, minutes, and seconds from the current date and time. It then formats the `LocalDateTime` object using the `DateTimeFormatter` class and returns the formatted string.

The output of this code will be a random date and time in the `"yyyy-MM-dd'T'HH:mm:ss'Z'"` format.