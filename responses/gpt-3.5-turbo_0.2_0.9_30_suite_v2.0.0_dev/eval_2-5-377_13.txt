The issue is that you are trying to format a `LocalDate` object as a date-time string. `LocalDate` only contains the date information, not the time information. 

To generate a random date and time, you can use the `LocalDateTime` class instead of `LocalDate`. Here's an updated version of your code that uses `LocalDateTime`:

```java
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Random;

public class Main {
    public static void main(String[] args) {
        System.out.println(generateRandomDateAndTimeInString());
    }

    public static String generateRandomDateAndTimeInString() {
        LocalDateTime dateTime = LocalDateTime.now().minusDays(new Random().nextInt(365 * 70)).withNano(0);
        System.out.println("date and time :: " + dateTime.toString());
        return formatDate(dateTime);
    }

    public static String formatDate(LocalDateTime dateTime) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss'Z'");
        return dateTime.format(formatter);
    }
}
```

In this code, we use `LocalDateTime.now()` to get the current date and time, and then subtract a random number of days using `minusDays()`. We also use `withNano(0)` to set the nanosecond field to zero, since the format you want doesn't include nanoseconds.

Then, we format the `LocalDateTime` object using a `DateTimeFormatter` object, which is created using the pattern `"yyyy-MM-dd'T'HH:mm:ss'Z'"`.

This should give you a random date and time in the format you want.