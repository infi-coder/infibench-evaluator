You can use the `pip` package to check if a package is up-to-date or not. Here's a Python function `checkVersion` that takes the package name as an argument and returns `True` if the package is up-to-date, `False` otherwise:

```python
import pip

def checkVersion(pkgName):
    # Get the installed version of the package
    installed_version = None
    for dist in pip.get_installed_distributions():
        if dist.project_name.lower() == pkgName.lower():
            installed_version = dist.version
            break

    # Get the latest version of the package available on PyPI
    latest_version = None
    try:
        package = pip.get_installed_distributions(pkgName)
        latest_version = package[0].version
    except:
        pass

    # Compare the installed and latest versions
    if installed_version and latest_version:
        if installed_version == latest_version:
            return True
        else:
            return False
    else:
        return False
```

You can call this function with the package name as the argument to check if the package is up-to-date or not. For example:

```python
if checkVersion('gekko'):
    print('gekko is up-to-date')
else:
    print('gekko is not up-to-date')
```