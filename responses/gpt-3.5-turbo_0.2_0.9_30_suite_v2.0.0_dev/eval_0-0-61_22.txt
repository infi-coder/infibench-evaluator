To change the background color of the root element dynamically with React, you can use the `ThemeProvider` component provided by Material-UI. 

Here's an example of how you can use it to switch between light and dark themes:

```jsx
import React, { useState } from 'react';
import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';
import CssBaseline from '@material-ui/core/CssBaseline';
import Switch from '@material-ui/core/Switch';

function App() {
  const [darkMode, setDarkMode] = useState(false);

  const theme = createMuiTheme({
    palette: {
      type: darkMode ? 'dark' : 'light',
    },
  });

  const handleThemeChange = () => {
    setDarkMode(!darkMode);
  };

  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />
      <div style={{ backgroundColor: theme.palette.background.default }}>
        <Switch checked={darkMode} onChange={handleThemeChange} />
        <h1>Hello World</h1>
        <p>This is a Material-UI app with a dynamic theme</p>
      </div>
    </ThemeProvider>
  );
}

export default App;
```

In this example, we use the `createMuiTheme` function to create a theme object with a `palette` property that specifies the type of the theme (either `'light'` or `'dark'`). We then use the `ThemeProvider` component to wrap our app and pass the theme object as a prop.

To change the theme dynamically, we use the `useState` hook to keep track of the current theme mode (`darkMode`) and a `Switch` component to toggle it. When the mode changes, we update the state with `setDarkMode` and the theme is automatically updated by the `ThemeProvider`.

Finally, we use the `CssBaseline` component to apply some basic global styles to the app, and we set the background color of the root element to the default background color of the theme using inline styles.