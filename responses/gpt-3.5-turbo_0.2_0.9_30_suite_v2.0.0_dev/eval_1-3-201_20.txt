You can use multiprocessing to run both scripts simultaneously. Here's an example of how you can modify your code to use multiprocessing:

```python
import multiprocessing as mp

app = dash.Dash(__name__, external_stylesheets=[dbc.themes.BOOTSTRAP])
database=db.dataBase()
homepage=hp.homepage(database)
homepage.timeUpdateCallback(app)
homepage.gaugeRefreshCallback(app)
dataMiningScript= fd.financeData(database,1600)

app.layout = homepage.layoutMaker()

if __name__ == "__main__":
    p1 = mp.Process(target=dataMiningScript.run)
    p2 = mp.Process(target=app.run_server, args=(dict(debug=True),))
    p1.start()
    p2.start()
    p1.join()
    p2.join()
```

In this code, we create two processes `p1` and `p2` that run the `dataMiningScript.run()` and `app.run_server()` functions respectively. We then start both processes and wait for them to finish using `p1.join()` and `p2.join()`. This will allow both scripts to run simultaneously without blocking each other.