To change the background color of the root element dynamically with React, you can use the `ThemeProvider` component from Material-UI. 

Here's an example of how you can use it to switch between light and dark themes:

```jsx
import React, { useState } from 'react';
import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';
import { CssBaseline } from '@material-ui/core';

function App() {
  const [darkMode, setDarkMode] = useState(false);

  const theme = createMuiTheme({
    palette: {
      type: darkMode ? 'dark' : 'light',
    },
  });

  const handleThemeChange = () => {
    setDarkMode(!darkMode);
  };

  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />
      <div style={{ backgroundColor: theme.palette.background.default }}>
        <h1>Hello World!</h1>
        <button onClick={handleThemeChange}>Toggle Theme</button>
      </div>
    </ThemeProvider>
  );
}

export default App;
```

In this example, we create a `theme` object using the `createMuiTheme` function, and set the `palette.type` property to either `'dark'` or `'light'` depending on the `darkMode` state. We then pass this theme object to the `ThemeProvider` component, which applies it to all child components.

We also use the `CssBaseline` component to apply some basic global styles, such as setting the font family and removing margins.

Finally, we use the `backgroundColor` property to set the background color of the root element to the default background color of the theme. We also add a button to toggle the `darkMode` state, which will switch between the light and dark themes.