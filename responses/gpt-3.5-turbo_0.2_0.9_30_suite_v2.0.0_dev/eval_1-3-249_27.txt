Here's a possible implementation of the `generateRandomString` function in Python:

```python
import random
import string

def generateRandomString():
    # Define the allowed characters
    allowed_chars = string.ascii_letters + string.digits
    
    # Generate a random string of length 9
    random_string = ''.join(random.choice(allowed_chars) for i in range(9))
    
    # Insert the "NAA3U" substring at a random position
    random_position = random.randint(0, 12)
    random_string = random_string[:random_position] + "NAA3U" + random_string[random_position+5:]
    
    # Generate a random 3-digit number
    random_number = random.randint(100, 999)
    
    # Replace the first occurrence of "000" with the random number
    random_string = random_string.replace("000", str(random_number), 1)
    
    # Return the final random string
    return random_string
```

Here's how the function works:

1. We define the allowed characters as all the letters (lowercase and uppercase) and digits.
2. We generate a random string of length 9 using the `random.choice` function to pick a random character from the allowed characters for each position in the string.
3. We insert the "NAA3U" substring at a random position in the string using the `random.randint` function to generate a random index between 0 and 12 (inclusive).
4. We generate a random 3-digit number using the `random.randint` function.
5. We replace the first occurrence of "000" in the string with the random number using the `str.replace` method with the `count` parameter set to 1.
6. We return the final random string.

Note that this implementation assumes that the "NAA3U" substring and the 3-digit number can appear in any order in the final string. If you need to enforce a specific order, you'll need to modify the implementation accordingly.