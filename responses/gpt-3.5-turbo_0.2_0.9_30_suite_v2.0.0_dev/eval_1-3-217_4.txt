You can use the `torch.unsqueeze()` function to add a new dimension to the tensor `d` and then concatenate it with `inps` along the last dimension using the `torch.cat()` function. Here's the implementation of the `addTensor()` function:

```python
import torch

def addTensor(inps, d):
    d = torch.unsqueeze(d, dim=2)
    out = torch.cat((inps, d), dim=2)
    return out
```

Here, `torch.unsqueeze(d, dim=2)` adds a new dimension of size 1 to `d` along the last dimension, resulting in a tensor of size [64, 161, 1]. Then, `torch.cat((inps, d), dim=2)` concatenates `inps` and `d` along the last dimension, resulting in a tensor of size [64, 161, 2]. The resulting tensor is returned as `out`.