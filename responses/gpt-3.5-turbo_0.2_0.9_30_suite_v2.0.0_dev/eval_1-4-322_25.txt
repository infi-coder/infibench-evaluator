Here's a solution using `tidyverse` functions:

```r
library(tidyverse)

myConvert <- function(my_data) {
  my_data %>%
    group_by(list_names) %>%
    summarize(list_values = list(list_values)) %>%
    deframe()
}
```

Explanation:

1. `group_by(list_names)` groups the data by the `list_names` column.
2. `summarize(list_values = list(list_values))` creates a new column `list_values` which is a list of all the values in the `list_values` column for each group.
3. `deframe()` converts the grouped tibble to a named list, where the names are the unique values of the `list_names` column and the values are the corresponding lists of `list_values`.

Testing the function:

```r
my_data <- tibble(list_names = c("Ford", "Chevy", "Ford", "Dodge", "Dodge", "Ford"),
                  list_values = c("Ranger", "Equinox", "F150", "Caravan", "Ram", "Explorer"))

desired_output <- list(Ford = c("Ranger", "F150", "Explorer"),
                       Chevy = c("Equinox"),
                       Dodge = c("Caravan", "Ram"))

myConvert(my_data)
# Output:
# $Ford
# [1] "Ranger"   "F150"     "Explorer"
# 
# $Chevy
# [1] "Equinox"
# 
# $Dodge
# [1] "Caravan" "Ram"

identical(myConvert(my_data), desired_output)
# Output: TRUE
```

The function `myConvert` takes the input tibble `my_data` and returns the desired output as a named list.