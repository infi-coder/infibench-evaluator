To import images in a React component with TypeScript, you need to do the following:

1. Create a `.d.ts` file with the same name as the image file you want to import. In your case, you should create a file called `image.d.ts` inside the `assets` folder.

2. Inside the `.d.ts` file, declare a module with the same name as the image file, and export a string with the path to the image file. Here's an example:

```
declare module '*.jpg' {
  const value: string;
  export default value;
}
```

3. In your component file, import the image using the same syntax as you would with a regular JavaScript file. For example:

```
import * as React from 'react';
import image from '../assets/image.jpg';

const Box = props => {
  // do things...
}

export default Box;
```

4. Make sure that the `.d.ts` file is included in your `tsconfig.json` file. You can do this by adding the following line to the `include` array:

```
"include": ["src/**/*.ts", "src/**/*.tsx", "src/**/*.d.ts"]
```

Note that TypeScript is ignoring your `index.d.ts` file because it assumes that it is generated from `index.tsx`, which is more likely to be up to date. Name your `.d.ts` file something else, e.g., `declaration.d.ts`.