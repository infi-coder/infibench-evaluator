The issue is that you are trying to format a `LocalDate` object as a date-time string, but a `LocalDate` only contains a date, not a time. You need to use a `LocalDateTime` object instead, which contains both a date and a time.

Here's an updated version of your code that generates a random `LocalDateTime` object and formats it in the desired format:

```java
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Random;

public class Main {
    public static void main(String[] args) {
        System.out.println(generateRandomDateAndTimeInString());
    }

    public static String generateRandomDateAndTimeInString() {
        LocalDateTime dateTime = LocalDateTime.now().minusDays(new Random().nextInt(365 * 70)).withNano(0);
        System.out.println("date and time :: " + dateTime.toString());
        return formatDate(dateTime);
    }

    public static String formatDate(LocalDateTime dateTime) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss'Z'");
        return dateTime.format(formatter);
    }
}
```

Note that I've also added a call to `withNano(0)` to set the nanoseconds of the `LocalDateTime` to zero, since the desired format doesn't include fractional seconds.