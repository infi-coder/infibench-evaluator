You can define an interface for the object type you want to use in the array and then use that interface as the type for the array parameter in your function. Here's an example:

```typescript
interface Product {
  name: string;
  price: number;
  description: string;
}

const bagTotal = (products: Product[]) => {
  // function does stuff
}
```

In this example, we define an interface called `Product` that has three properties: `name`, `price`, and `description`. Then, we use `Product[]` as the type for the `products` parameter in the `bagTotal` function. This means that `products` must be an array of objects that conform to the `Product` interface.