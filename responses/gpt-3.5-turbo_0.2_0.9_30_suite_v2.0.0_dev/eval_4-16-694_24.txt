You can use `grep` with a regular expression to match the `lang` attribute value regardless of its position in the HTML tag. Here's an example command that should work for both cases:

```
curl -Ls yahoo.com | grep -oP 'lang="\K[^"]+' | head -1
```

This command uses the `-o` option to print only the matched text, and the `-P` option to enable Perl-compatible regular expressions. The regular expression `lang="\K[^"]+` matches the `lang` attribute value by looking for `lang="` and then using `\K` to reset the match so that only the attribute value is captured. The `[^"]+` pattern matches one or more characters that are not a double quote, which is used to end the attribute value.

Note that this command assumes that the `lang` attribute is enclosed in double quotes. If the HTML uses single quotes instead, you can modify the regular expression accordingly:

```
curl -Ls yahoo.com | grep -oP "lang='\K[^']+" | head -1
```