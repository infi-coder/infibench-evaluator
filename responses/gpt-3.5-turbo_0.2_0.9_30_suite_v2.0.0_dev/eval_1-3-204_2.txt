The issue with your code is that `rename()` method is used to rename the index or column labels of a DataFrame, not to rename a specific column. To rename a specific column, you can simply assign a new name to the column using the `rename()` method with the `columns` parameter set to a dictionary of the old and new column names.

Here's the modified code that should work for you:

```python
import pandas as pd
import numpy as np

def renameDataFrame(df):
    datain = np.loadtxt(datafile)
    df = pd.DataFrame(data=datain, columns=["t", "p", "x", "y", "z"])
    avg = df.groupby(["t"], sort=False)["p"].mean().reset_index().rename(columns={"p": "mean"})
    return avg
```

In this code, we first group the DataFrame by the "t" column and calculate the mean of the "p" column for each group. Then, we reset the index of the resulting DataFrame and rename the "p" column to "mean" using the `rename()` method with the `columns` parameter. Finally, we return the resulting DataFrame.

Note that I have added a `reset_index()` method call to the code to make sure that the resulting DataFrame has a proper index.