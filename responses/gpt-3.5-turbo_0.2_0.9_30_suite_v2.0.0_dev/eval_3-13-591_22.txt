The reason why you are seeing the logs in that order is because the `onItemSelected` function is called asynchronously when the user selects an item from the spinner. This means that the `return` statement is executed before the `onItemSelected` function is called, hence the empty string being returned.

To fix this, you can use a callback function to return the selected item instead of returning it directly from the `setupListWithAdapter` function. Here's an example:

```
fun Spinner.setupListWithAdapter(list: MutableList<String>, callback: (String) -> Unit) {
    val adapter = ArrayAdapter(context, android.R.layout.simple_spinner_item, list)
    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)
    this.adapter = adapter
    this.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
        override fun onItemSelected(p0: AdapterView<*>?, p1: View?, p2: Int, p3: Long) {
            val itemSelected = list[p2]
            Log.e("categoryLog","1 : " + itemSelected)
            callback(itemSelected)
        }
        override fun onNothingSelected(p0: AdapterView<*>?) {
        }
    }
    Log.e("categoryLog","2")
}
```

In this updated function, we pass in a callback function as a parameter. This function takes a `String` parameter and returns nothing (`Unit`). Inside the `onItemSelected` function, we call this callback function with the selected item as the parameter. This way, when the user selects an item from the spinner, the callback function is called with the selected item, and you can use it in your fragment or activity.

To use this updated function in your fragment, you can do something like this:

```
spinner.setupListWithAdapter(list) { selectedItem ->
    // Do something with the selected item here
    Log.e("categoryLog", "Selected item: $selectedItem")
}
```

In this example, we pass in a lambda function as the callback. This lambda function takes a `String` parameter (which is the selected item) and logs it to the console. You can replace the logging with your own logic to use the selected item in your fragment.