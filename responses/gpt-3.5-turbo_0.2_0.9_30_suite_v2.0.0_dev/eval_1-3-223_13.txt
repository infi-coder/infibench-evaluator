You can use the `pip` module in Python to check if a package is at its latest version. Here's an implementation of the `checkVersion` function:

```python
import pip

def checkVersion(pkgName):
    # Get the package information
    package_info = pip.get_installed_distributions()

    # Loop through the installed packages and check if the package is installed
    for package in package_info:
        if package.project_name.lower() == pkgName.lower():
            # Check if the package is up-to-date
            latest_version = pip.get_latest_version(pkgName)
            if package.version == latest_version:
                return True
            else:
                return False

    # If the package is not installed, return False
    return False
```

This function first gets the information about all the installed packages using the `get_installed_distributions` function from the `pip` module. It then loops through the installed packages and checks if the package name matches the `pkgName` argument. If the package is found, it checks if it is up-to-date by comparing its version with the latest version available using the `get_latest_version` function from the `pip` module. If the package is up-to-date, it returns `True`, otherwise it returns `False`. If the package is not installed, it also returns `False`.