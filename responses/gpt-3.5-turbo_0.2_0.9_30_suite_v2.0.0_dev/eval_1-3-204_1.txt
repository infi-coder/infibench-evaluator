The issue with your code is that the `rename()` method is not applicable to a Pandas Series object, which is what you get when you call `.mean()` on a DataFrame column. Instead, you can use the `agg()` method to apply multiple aggregation functions to a DataFrame column and then rename the resulting columns.

Here's the modified code that should work for you:

```python
import pandas as pd
import numpy as np

def renameDataFrame(df):
    datain = np.loadtxt(datafile)
    df = pd.DataFrame(data=datain, columns=["t", "p", "x", "y", "z"])
    avg = df.groupby(["t"], sort=False)["p"].agg(mean=("p", "mean"))
    avg.reset_index(inplace=True)
    return avg
```

In this code, we use the `agg()` method to calculate the mean of the "p" column and rename the resulting column to "mean". We also use the `reset_index()` method to convert the grouped DataFrame back to a regular DataFrame with a numeric index.

You can call this function with your DataFrame as the argument and it will return the modified DataFrame with the "p" column renamed as "mean" and the average values grouped by the "t" column.