You can modify your `grep` command to look for the `lang` attribute within the `html` tag instead of just searching for `lang=`. Here's an example command that should work for both cases:

```
curl -Ls yahoo.com | grep -oP '<html[^>]+lang="\K[^"]+' | head -1
```

This command uses the `-o` option to only output the matched string (i.e. the language code), and the `-P` option to enable Perl-compatible regular expressions. The regular expression `'<html[^>]+lang="\K[^"]+'` matches the `html` tag with any attributes before the `lang` attribute, then uses `\K` to reset the match so that only the value of the `lang` attribute is captured. The `head -1` command is used to only output the first match, in case there are multiple `html` tags on the page.

Note that this command assumes that the `lang` attribute is always within an `html` tag. If this is not the case for some pages, you may need to modify the regular expression to match the specific structure of those pages.