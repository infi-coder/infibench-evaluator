You can use `grep` with a regular expression to match the `lang` attribute value regardless of its position in the HTML tag. Here's an example command that should work for both cases:

```
curl -Ls yahoo.com | grep -oP 'lang="\K[^"]+' | head -1
```

This command uses the `-o` option to output only the matched string, and the `-P` option to enable Perl-compatible regular expressions. The regular expression `lang="\K[^"]+` matches the `lang` attribute value by looking for the string `lang="` and then using `\K` to reset the match, so that only the characters after the `"` are captured. The `[^"]+` pattern matches one or more characters that are not a `"`, which corresponds to the `he-IL` language code in your example.

Note that this command assumes that the `lang` attribute value is enclosed in double quotes (`"`), which is the standard syntax for HTML attributes. If the page you're parsing uses single quotes (`'`) or no quotes at all, you may need to adjust the regular expression accordingly.