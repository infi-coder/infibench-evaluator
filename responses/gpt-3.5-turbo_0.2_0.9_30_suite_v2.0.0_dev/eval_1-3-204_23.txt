The `rename()` method in Pandas is used to rename the index or column labels of a DataFrame. In your case, you want to rename a column, not the index. Therefore, you should use the `rename()` method on the DataFrame itself, not on the result of `groupby()`.

Here's the corrected code:

```python
import pandas as pd
import numpy as np

datain = np.loadtxt(datafile)
df = pd.DataFrame(data=datain, columns=["t", "p", "x", "y", "z"])
avg = df.groupby("t", sort=False)["p"].mean().reset_index().rename(columns={"p": "mean"})
```

In this code, we first group the DataFrame by the "t" column and calculate the mean of the "p" column. Then we reset the index of the resulting DataFrame and rename the "p" column to "mean".

Here's the `renameDataFrame()` function:

```python
def renameDataFrame(df):
    avg = df.groupby("t", sort=False)["p"].mean().reset_index().rename(columns={"p": "mean"})
    return avg
```

You can call this function with your DataFrame as the argument, like this:

```python
new_df = renameDataFrame(df)
```

This will return a new DataFrame with the "p" column renamed as "mean" and the average numbers group by "t" column.