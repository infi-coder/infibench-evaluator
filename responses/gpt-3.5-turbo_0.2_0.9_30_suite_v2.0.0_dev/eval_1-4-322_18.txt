You can use `group_split()` and `map()` functions from `tidyverse` to achieve this. Here's the `myConvert()` function that does the job:

```r
library(tidyverse)

myConvert <- function(my_data) {
  my_data %>%
    group_split(list_names) %>%
    map(~ .x$list_values)
}
```

This function first splits the data into groups based on the unique values of `list_names` column using `group_split()`. Then, it applies the `map()` function to each group and extracts the `list_values` column. The output is a named list where the names are the unique values of `list_names` column and the elements are the corresponding values of `list_values` column.

You can test the function with the sample data you provided:

```r
my_data <- tibble(list_names = c("Ford", "Chevy", "Ford", "Dodge", "Dodge", "Ford"),
                  list_values = c("Ranger", "Equinox", "F150", "Caravan", "Ram", "Explorer"))

myConvert(my_data)
```

This should give you the desired output:

```r
$Chevy
[1] "Equinox"

$Dodge
[1] "Caravan" "Ram"    

$Ford
[1] "Ranger"   "F150"     "Explorer"
```