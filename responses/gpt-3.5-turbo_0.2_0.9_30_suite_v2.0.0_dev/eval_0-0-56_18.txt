It seems like the issue is with the way you are running the Vite server inside the Docker container. By default, Vite binds to `localhost` which means it can only be accessed from within the container itself. To make it accessible from outside the container, you need to bind it to `0.0.0.0`.

To do this, you can modify your `vite.config.ts` file to include the `host` option:

```typescript
import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'

// https://vitejs.dev/config/
export default defineConfig({
    resolve: { alias: { '@': '/src' } },
    plugins: [vue()],
    server: {
        port: 8080,
        host: '0.0.0.0'
    }
})
```

This will allow the Vite server to be accessed from outside the container.

Additionally, you may need to modify your Dockerfile to expose the port:

```
FROM node:16.10.0

RUN npm install -g npm@8.1.3
RUN npm install -g @vue/cli@4.5.15

RUN mkdir /srv/app && chown node:node /srv/app

USER node

WORKDIR /srv/app

EXPOSE 8080

CMD ["npm", "run", "vite"]
```

The `EXPOSE` command tells Docker to expose port 8080, and the `CMD` command specifies the command to run when the container starts.

With these changes, you should be able to access the Vite server from your host machine using `localhost:8080`.