To create an index of a property in Mongoose schema using Nest.js, you can use the `@Schema()` decorator to define the schema and then use the `@Index()` decorator to define the index on the property.

Here's an example:

```javascript
import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { Document } from 'mongoose';
import { Index } from '@nestjs/mongoose';

@Schema()
export class MySchema extends Document {
  @Prop()
  _id: string;

  @Prop({ required: true })
  name: string;

  @Prop()
  creationDate: string;

  @Prop()
  @Index({ unique: true })
  type: string;
}

export const MySchema = SchemaFactory.createForClass(MySchema);
```

In this example, we define the `type` property with the `@Index()` decorator and set the `unique` option to `true` to create a unique index on the `type` property.

Note that you need to import the `Index` decorator from `@nestjs/mongoose` to use it in your schema.