The issue is that you are trying to format a `LocalDate` object as a date-time string. `LocalDate` only represents a date, not a time. You should use `LocalDateTime` instead, which represents both a date and a time.

Here is an updated version of your code that generates a random `LocalDateTime` object and formats it in the desired format:

```java
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Random;

public class Main {
    public static void main(String[] args) {
        System.out.println(generateRandomDateAndTimeInString());
    }

    public static String generateRandomDateAndTimeInString() {
        LocalDateTime dateTime = LocalDateTime.now().minusDays(new Random().nextInt(365 * 70)).minusHours(new Random().nextInt(24)).minusMinutes(new Random().nextInt(60)).minusSeconds(new Random().nextInt(60));
        System.out.println("date and time :: " + dateTime.toString());
        return formatDate(dateTime);
    }

    public static String formatDate(LocalDateTime dateTime) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss'Z'");
        return dateTime.format(formatter);
    }
}
```

This code generates a random `LocalDateTime` object by subtracting a random number of days, hours, minutes, and seconds from the current date and time. It then formats the `LocalDateTime` object using a `DateTimeFormatter` object with the desired format.

The output should look something like this:

```
date and time :: 1972-05-22T12:34:56.789
1972-05-22T12:34:56Z
```