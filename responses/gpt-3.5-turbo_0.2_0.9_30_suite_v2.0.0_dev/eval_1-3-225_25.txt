Here's the revised code for the `pig_latin` function:

```python
def pig_latin(text):
  words = text.split()
  pig_latin_words = []
  for word in words:
    endString = str(word[1:]).lower()
    startString = str(word[0]).lower()
    pig_latin_word = endString + startString + 'ay'
    pig_latin_words.append(pig_latin_word)
  return ' '.join(pig_latin_words)
```

The problem with the original code is that the `return` statement is inside the `for` loop, so it only runs once and returns the first word. Additionally, the logic for creating the pig Latin word was incorrect. The revised code splits the text into words, creates an empty list to store the pig Latin words, and then loops through each word. For each word, it creates the pig Latin version by moving the first letter to the end, adding "ay", and appending it to the list. Finally, it joins the list of pig Latin words into a single string separated by spaces and returns it.