Here's the revised code for the `pig_latin` function:

```python
def pig_latin(text):
  words = text.split()
  pig_words = []
  for word in words:
    endString = word[1:].lower()
    startString = word[0].upper()
    pig_word = endString + startString + 'ay'
    pig_words.append(pig_word)
  return ' '.join(pig_words)
```

In this revised code, we first split the input text into a list of words using the `split()` method. Then, we iterate over each word in the list and apply the pig Latin transformation. 

To transform a word, we first extract the substring starting from the second character (index 1) to the end of the word using `word[1:]`. We convert this substring to lowercase using the `lower()` method. 

Next, we extract the first character of the word using `word[0]` and convert it to uppercase using the `upper()` method. 

We then concatenate the lowercase substring, the uppercase first character, and the string "ay" using the `+` operator to form the pig Latin version of the word. 

Finally, we append the pig Latin word to a list of pig Latin words and join the list into a single string using the `join()` method with a space separator. 

This revised code should correctly transform the input text into pig Latin.