It looks like the issue might be with the way you're running the container. When you run the container with the `--publish` option, it maps the container's port 8080 to the host's port 8080. However, in your `vite.config.ts` file, you're specifying the server to run on port 8080 inside the container. This means that the container's port 8080 is mapped to the host's port 8080, but the server is actually running on the container's port 8080.

To fix this, you can change the `server.port` option in your `vite.config.ts` file to `0.0.0.0:8080`. This will make the server listen on all available network interfaces, including the one that Docker is using to map the container's port to the host's port. Here's what your `vite.config.ts` file should look like:

```typescript
import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'

// https://vitejs.dev/config/
export default defineConfig({
    resolve: { alias: { '@': '/src' } },
    plugins: [vue()],
    server: {
        host: '0.0.0.0',
        port: 8080
    }
})
```

After making this change, you should be able to access the server at `localhost:8080` on your host machine.