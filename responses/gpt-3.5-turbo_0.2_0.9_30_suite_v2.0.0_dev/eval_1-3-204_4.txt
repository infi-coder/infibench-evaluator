The issue with your code is that the `rename` method is not applicable to a Pandas Series object, which is what you get when you call `mean()` on a DataFrame. Instead, you can use the `agg` method to compute the mean and rename the resulting column. Here's an updated version of your code that should work:

```python
import pandas as pd
import numpy as np

def renameDataFrame(df):
    datain = np.loadtxt(datafile)
    df = pd.DataFrame(data=datain, columns=["t", "p", "x", "y", "z"])
    avg = df.groupby("t", sort=False)["p"].agg(mean=("p", "mean")).reset_index()
    avg = avg.rename(columns={"mean": "p"})
    return avg
```

In this version, we use the `agg` method to compute the mean of the "p" column and rename the resulting column to "mean". We then reset the index to make sure that "t" is a regular column, and finally rename the "mean" column to "p" to match the original column name. The resulting DataFrame should have the "p" column renamed as "mean" and contain the average numbers grouped by "t" column.