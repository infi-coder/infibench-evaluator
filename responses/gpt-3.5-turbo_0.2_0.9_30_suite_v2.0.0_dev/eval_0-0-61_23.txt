To change the background color of the root element dynamically with React, you can use the `ThemeProvider` component from Material-UI. 

Here's an example of how you can use it:

```jsx
import React, { useState } from 'react';
import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';
import { Button } from '@material-ui/core';

function App() {
  const [isDarkMode, setIsDarkMode] = useState(false);

  const theme = createMuiTheme({
    palette: {
      type: isDarkMode ? 'dark' : 'light',
    },
  });

  const handleToggleDarkMode = () => {
    setIsDarkMode(!isDarkMode);
  };

  return (
    <ThemeProvider theme={theme}>
      <Button onClick={handleToggleDarkMode}>
        {isDarkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}
      </Button>
      <div>
        This is the content of your app.
      </div>
    </ThemeProvider>
  );
}

export default App;
```

In this example, we're using the `createMuiTheme` function to create a theme object that has a `palette` property with a `type` of either `'dark'` or `'light'`, depending on the value of the `isDarkMode` state. 

We're then passing this theme object to the `ThemeProvider` component, which will apply it to all the Material-UI components in the app. 

Finally, we're using a `Button` component to toggle the `isDarkMode` state, which will cause the theme to be updated and the background color of the root element to change.