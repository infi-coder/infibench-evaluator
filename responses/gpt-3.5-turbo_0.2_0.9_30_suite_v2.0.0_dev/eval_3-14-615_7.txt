Yes, you can get the current scroll position of a SwiftUI ScrollView using the `ScrollViewProxy`. Here's an example:

```swift
struct ContentView: View {
    @State private var scrollOffset: CGFloat = 0
    
    var body: some View {
        ScrollView {
            VStack(spacing: 20) {
                ForEach(0..<50) { index in
                    Text("Item \(index)")
                        .frame(width: 200, height: 50)
                }
            }
            .background(
                GeometryReader { proxy in
                    Color.clear
                        .preference(key: ScrollViewOffsetPreferenceKey.self, value: proxy.contentOffset.y)
                }
            )
        }
        .onPreferenceChange(ScrollViewOffsetPreferenceKey.self) { value in
            self.scrollOffset = value
        }
        
        Text("Current scroll offset: \(scrollOffset)")
    }
}

struct ScrollViewOffsetPreferenceKey: PreferenceKey {
    static var defaultValue: CGFloat = 0
    
    static func reduce(value: inout CGFloat, nextValue: () -> CGFloat) {
        value = nextValue()
    }
}
```

In this example, we're using a `ScrollViewOffsetPreferenceKey` to store the current scroll offset as a preference. We're also using a `GeometryReader` to get the content offset of the `ScrollView` and update the preference value whenever it changes. Finally, we're using the `onPreferenceChange` modifier to update the `scrollOffset` state variable whenever the preference value changes.