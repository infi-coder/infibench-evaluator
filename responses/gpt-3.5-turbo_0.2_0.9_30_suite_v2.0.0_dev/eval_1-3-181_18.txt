You can use the `numpy.max()` function along with the appropriate axis parameter to get the maximum value of each column in the third dimension of the array. Then, you can use slicing to extract the third column of each 2D array in the resulting 2D array and reshape it to a 2D array with a single column. Here's the code:

```python
import numpy as np

def getMax(matrix):
    max_values = np.max(matrix, axis=2)[:, 2]
    result = max_values.reshape((-1, 1))
    return result
```

Here, `np.max(matrix, axis=2)` returns a 2D array where each element is the maximum value of the corresponding column in the third dimension of the original array. Then, `[:, 2]` slices the third column of each 2D array in the resulting 2D array. Finally, `reshape((-1, 1))` reshapes the resulting 1D array to a 2D array with a single column.