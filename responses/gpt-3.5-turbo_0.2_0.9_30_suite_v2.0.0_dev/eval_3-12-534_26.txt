To listen to multiple ChangeNotifier classes in a single widget using Provider in Flutter, you can use the `MultiProvider` widget. 

First, import the necessary packages:

```dart
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
```

Then, wrap your widget with the `MultiProvider` widget and pass in a list of the ChangeNotifier classes you want to listen to:

```dart
MultiProvider(
  providers: [
    ChangeNotifierProvider<FirstNotifier>(create: (_) => FirstNotifier()),
    ChangeNotifierProvider<SecondNotifier>(create: (_) => SecondNotifier()),
    ChangeNotifierProvider<ThirdNotifier>(create: (_) => ThirdNotifier()),
    ChangeNotifierProvider<FourthNotifier>(create: (_) => FourthNotifier()),
  ],
  child: MyWidget(),
)
```

In this example, we are listening to four different ChangeNotifier classes: `FirstNotifier`, `SecondNotifier`, `ThirdNotifier`, and `FourthNotifier`.

Now, in your `MyWidget` widget, you can use the `Provider.of<T>(context)` method to access the instances of each ChangeNotifier class:

```dart
class MyWidget extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final firstNotifier = Provider.of<FirstNotifier>(context);
    final secondNotifier = Provider.of<SecondNotifier>(context);
    final thirdNotifier = Provider.of<ThirdNotifier>(context);
    final fourthNotifier = Provider.of<FourthNotifier>(context);

    // Use the notifiers as needed
    // ...

    return Container();
  }
}
```

By using `Provider.of<T>(context)` with each ChangeNotifier class, you can listen to all of them in a single widget.