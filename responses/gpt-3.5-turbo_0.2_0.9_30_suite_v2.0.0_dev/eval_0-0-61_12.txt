To change the background color of the root element dynamically with React, you can use the `ThemeProvider` component from Material-UI. 

Here's an example of how you can use it to switch between light and dark themes:

```jsx
import React, { useState } from 'react';
import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';
import { CssBaseline } from '@material-ui/core';

function App() {
  const [darkMode, setDarkMode] = useState(false);

  const theme = createMuiTheme({
    palette: {
      type: darkMode ? 'dark' : 'light',
    },
  });

  const handleThemeChange = () => {
    setDarkMode(!darkMode);
  };

  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />
      <div style={{ backgroundColor: theme.palette.background.default }}>
        <h1>Hello World</h1>
        <button onClick={handleThemeChange}>Toggle Theme</button>
      </div>
    </ThemeProvider>
  );
}

export default App;
```

In this example, we're using the `createMuiTheme` function to create a theme object that changes the palette type between 'light' and 'dark' based on the `darkMode` state. 

We're also using the `CssBaseline` component to apply some basic global styles to the document, such as setting the font family and applying a default margin to the body.

Finally, we're wrapping our app in the `ThemeProvider` component and passing in the `theme` object. We're also setting the background color of the root element to the default background color of the theme using inline styles.

When the user clicks the "Toggle Theme" button, we're updating the `darkMode` state to switch between the light and dark themes. The `ThemeProvider` component will automatically update the styles of all Material-UI components based on the new theme.