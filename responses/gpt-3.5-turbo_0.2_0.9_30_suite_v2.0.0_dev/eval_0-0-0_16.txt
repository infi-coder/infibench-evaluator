Sure! Here's a possible implementation of the `keys_and_prices` function:

```javascript
function keys_and_prices(raw_obj) {
  let keys = []
  let prices = []
  for (let key in raw_obj) {
    if (raw_obj.hasOwnProperty(key)) {
      keys.push(key)
      prices.push(raw_obj[key].price)
    }
  }
  return [keys, prices]
}
```

This function iterates over the keys of the input object using a `for...in` loop, and for each key it checks if the object has a property with that key using the `hasOwnProperty` method. If the property exists, it pushes the key into the `keys` array and the corresponding `price` field value into the `prices` array. Finally, it returns an array with both arrays.

You can use this function as follows:

```javascript
var itemsToBuy = { milk: { quantity : 5, price: 20 }, bread: { quantity : 2, price: 15 }, potato: { quantity : 3, price: 10 } }
let ret = keys_and_prices(itemsToBuy)
console.log(ret[0]) // ["milk", "bread", "potato"]
console.log(ret[1]) // [20, 15, 10]
```

Note that the order of the elements in the arrays is the same as the order of the keys in the input object.