To create an index of a property in Mongoose schema using Nest.js, you can use the `@Schema` decorator to define the schema and the `@Index` decorator to define the index.

Here's an example:

```javascript
import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';
import { Document } from 'mongoose';
import { Index } from '@nestjs/mongoose';

@Index({ type: 1 })
@Schema()
export class MySchema extends Document {
  @Prop()
  _id: string;

  @Prop({ required: true })
  type: string;

  @Prop()
  creationDate: string;

  @Prop()
  name: string;
}

export const MySchema = SchemaFactory.createForClass(MySchema);
```

In this example, we use the `@Index` decorator to define the index on the `type` property. We also use the `@Schema` decorator to define the schema and the `@Prop` decorator to define the properties of the schema.

Note that we use the `@nestjs/mongoose` package to import the necessary decorators.