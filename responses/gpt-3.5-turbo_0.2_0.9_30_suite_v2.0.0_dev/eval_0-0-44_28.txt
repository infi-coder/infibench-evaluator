To create an index of a property in Mongoose schema using Nest.js, you can use the `@Schema` decorator to define the schema and then use the `@Index` decorator to create the index.

Here's an example:

```javascript
import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';
import { Document } from 'mongoose';
import { Index } from '@nestjs/mongoose';

@Schema()
export class MySchema extends Document {
  @Prop()
  _id: string;

  @Prop({ required: true })
  type: string;

  @Prop()
  creationDate: string;

  @Prop()
  name: string;
}

Index(MySchema, { type: 1 });

export const MySchema = SchemaFactory.createForClass(MySchema);
```

In this example, the `@Index` decorator is used to create an index on the `type` property of the `MySchema` schema. The first argument to the `@Index` decorator is the schema class, and the second argument is an object that defines the index. In this case, the index is defined on the `type` property with a sort order of `1` (ascending).

Note that the `@Index` decorator is imported from the `@nestjs/mongoose` package.