Sure! The code you provided is almost correct. The only issue is that you cannot have multiple index signatures in a single type. Instead, you can use the `&` operator to create an intersection type between two separate types, each with its own index signature. Here's the corrected code:

```typescript
type FruitsAndColors = {
  [key in fruit]: number;
} & {
  [key in color]: boolean;
}
```

This creates a type `FruitsAndColors` that has a numeric property for each fruit and a boolean property for each color.