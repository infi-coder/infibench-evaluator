Here's the revised code for the `pig_latin` function:

```python
def pig_latin(text):
  words = text.split()
  pig_latin_words = []
  for word in words:
    endString = str(word[1:]).lower()
    startString = str(word[0]).lower()
    pig_latin_words.append(endString + startString + 'ay')
  return ' '.join(pig_latin_words)
```

The changes made are:

1. Instead of initializing an empty string `say`, we initialize an empty list `pig_latin_words` to store the pig Latin words.
2. We iterate through each word in the `words` list and perform the pig Latin transformation on it.
3. We split the word into two parts: `endString` (the substring from the second character to the end) and `startString` (the first character).
4. We append the pig Latin version of the word to the `pig_latin_words` list.
5. Finally, we join the `pig_latin_words` list into a single string with spaces between the words and return it.

With these changes, the function should now correctly transform the input text into pig Latin.