Here's the revised code for the `pig_latin` function:

```python
def pig_latin(text):
    words = text.split()
    pig_latin_words = []
    for word in words:
        pig_latin_word = word[1:].lower() + word[0].lower() + "ay"
        pig_latin_words.append(pig_latin_word)
    return " ".join(pig_latin_words)
```

In this code, we first split the input `text` into individual words using the `split()` method. We then loop through each word and create a new word in pig Latin format by moving the first character to the end, converting the entire word to lowercase, and appending "ay" to the end. We then append the pig Latin word to a list of pig Latin words. Finally, we join all the pig Latin words together with spaces and return the resulting string.

Note that we use `word[1:].lower()` to get all the characters in the word except for the first one, and convert them to lowercase using the `lower()` method. We then add `word[0].lower()` to get the first character of the word in lowercase. Finally, we add "ay" to the end of the word.