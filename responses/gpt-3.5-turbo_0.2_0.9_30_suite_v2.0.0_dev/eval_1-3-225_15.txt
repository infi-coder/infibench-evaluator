Here's the revised code for the `pig_latin` function:

```python
def pig_latin(text):
  words = text.split()
  pig_latin_words = []
  for word in words:
    endString = str(word[1:]).lower()
    startString = str(word[0]).lower()
    pig_latin_words.append(endString + startString + 'ay')
  return ' '.join(pig_latin_words)
```

In the original code, the `return` statement was inside the `for` loop, so the function would return the first word after processing it and then exit the loop. This is why you were getting an empty list.

In the revised code, we create an empty list called `pig_latin_words` to store the pig Latin versions of each word. We then loop through each word in the input text, and for each word, we create the pig Latin version by moving the first letter to the end, adding "ay" to the end, and appending the result to the `pig_latin_words` list. Finally, we join the list into a string using spaces as separators and return the result.

With this revised code, the function should work as expected for the input examples you provided.