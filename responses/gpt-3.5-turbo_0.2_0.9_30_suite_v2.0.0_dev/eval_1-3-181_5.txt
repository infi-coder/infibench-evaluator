You can use the `numpy.max()` function along with the appropriate axis parameter to get the maximum value of each column in the third dimension of the input array. Then, you can use the `numpy.reshape()` function to convert the resulting 1D array into a 2D array with a single column. Here's the code:

```python
import numpy as np

def getMax(matrix):
    max_values = np.max(matrix[:,:,2], axis=1)
    return np.reshape(max_values, (-1, 1))
```

In this code, `matrix[:,:,2]` selects the third column of each 2D subarray in the 3D input array. The `axis=1` parameter in `np.max()` specifies that we want to take the maximum value along the second axis (i.e., the columns) of this 2D subarray. The resulting 1D array of maximum values is then reshaped into a 2D array with a single column using `np.reshape()`.