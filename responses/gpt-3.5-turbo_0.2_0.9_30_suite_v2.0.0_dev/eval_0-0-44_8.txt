To create an index of a property in Mongoose schema using Nest.js, you can use the `@Schema()` decorator to define the schema and then use the `@Index()` decorator to define the index.

Here's an example:

```javascript
import { Schema, Prop, SchemaFactory } from '@nestjs/mongoose';
import { Document } from 'mongoose';
import { Index } from '@nestjs/mongoose';

@Index({ type: 1 })
@Schema()
export class MySchema extends Document {
  @Prop()
  _id: string;

  @Prop({ required: true })
  type: string;

  @Prop()
  creationDate: string;

  @Prop()
  name: string;
}

export const MySchema = SchemaFactory.createForClass(MySchema);
```

In this example, we use the `@Index()` decorator to define the index on the `type` property with a value of `1`. The `@Index()` decorator takes an object with the index options as its argument.

Then, we use the `@Schema()` decorator to define the schema and the `@Prop()` decorator to define the properties of the schema. Finally, we use the `SchemaFactory.createForClass()` method to create the schema model.

With this setup, the index should be created when the schema is created.