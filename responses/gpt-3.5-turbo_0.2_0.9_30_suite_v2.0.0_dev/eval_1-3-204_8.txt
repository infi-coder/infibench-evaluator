The issue with your code is that the `rename()` method is not applicable to a Pandas Series object, which is what you get when you call `.mean()` on a DataFrame column. Instead, you can use the `agg()` method to apply multiple aggregation functions to a DataFrame column and then use the `rename()` method to rename the resulting columns.

Here's the modified code that should work:

```python
import pandas as pd
import numpy as np

def renameDataFrame(df):
    datain = np.loadtxt(datafile)
    df = pd.DataFrame(data=datain, columns=["t", "p", "x", "y", "z"])
    avg = df.groupby(["t"], sort=False)["p"].agg(mean=("p", "mean"))
    avg = avg.rename(columns={"mean": "new_mean"})
    return avg
```

In this code, we first group the DataFrame by the "t" column and apply the `mean()` function to the "p" column using the `agg()` method. The resulting DataFrame has a single column named "mean". We then use the `rename()` method to rename this column to "new_mean". Finally, we return the modified DataFrame.