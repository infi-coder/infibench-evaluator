Here's a modified version of your code that should work as expected:

```python
def divideNumber(num, n):
    parts = num // n  # Number of parts into which 'num' is to be divided
    remainder = num % n  # Remainder to be distributed among the parts

    # Create initial list of parts, each not exceeding 'parts'
    result = [parts] * n

    # Distribute the remainder by adding 2 to each part in succession
    for i in range(remainder):
        result[i] += 2

    return result
```

This function first calculates the number of parts (`parts`) that `num` should be divided into, and the remainder (`remainder`) that needs to be distributed among the parts. It then creates an initial list of `n` parts, each not exceeding `parts`. Finally, it distributes the remainder by adding 2 to each part in succession, starting from the first part.

For example, if you call `divideNumber(100, 3)`, it should return `[34, 34, 32]`, which is the desired output.