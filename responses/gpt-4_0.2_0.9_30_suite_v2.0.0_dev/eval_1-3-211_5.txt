Sure, you can achieve this by using the `groupby`, `cumsum` and `apply` functions provided by pandas. Here is the function `aggregation`:

```python
def aggregation(df):
    # Convert the 'value' column to numeric
    df['value'] = pd.to_numeric(df['value'])

    # Create a new column 'balance' which is the cumulative sum of 'value' where 'type' is 'deposit'
    df['balance'] = df[df['type'] == 'deposit'].groupby('exchange')['value'].cumsum()

    # Forward fill the 'balance' column within each group of 'exchange'
    df['balance'] = df.groupby('exchange')['balance'].ffill()

    # Fill any remaining NaN values with 0
    df['balance'] = df['balance'].fillna(0)

    return df
```

This function first converts the 'value' column to numeric, then creates a new column 'balance' which is the cumulative sum of 'value' where 'type' is 'deposit'. It then forward fills the 'balance' column within each group of 'exchange'. Finally, it fills any remaining NaN values with 0.