The error you're encountering is due to the fact that AWS Lambda expects a Linux binary, but you're building your Go application on a Windows machine. This results in a Windows binary, which AWS Lambda cannot execute.

To solve this issue, you need to cross-compile your Go code to a Linux binary. You can do this by setting the `GOOS` and `GOARCH` environment variables before building your Go application.

Here's how you can do it:

```bash
SET GOOS=linux
SET GOARCH=amd64
go build -o main main.go
```

This will generate a Linux binary named `main`. You can then zip this binary and upload it to AWS Lambda.

```bash
zip function.zip main
```

Now, you can upload the `function.zip` file to AWS Lambda. Make sure to set the handler name to `main`.

This should resolve the `fork/exec /var/task/main: no such file or directory` error you're encountering.