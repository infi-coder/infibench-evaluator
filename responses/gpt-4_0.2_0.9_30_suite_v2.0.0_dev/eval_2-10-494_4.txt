The error message "could not resolve macro `$crate::format_args`" is coming from rust-analyzer, a language server for Rust. It's not an error with your code, but rather an issue with rust-analyzer itself.

Rust-analyzer sometimes has issues with macro resolution, especially in more complex scenarios or when macros are used in certain ways. This is a known limitation of rust-analyzer and is something that the developers are working on improving.

In your case, the error seems to be triggered by the use of the `assert_eq!` macro in your test. The `assert_eq!` macro internally uses the `format_args!` macro, which is where the error is coming from.

As for how to fix it, there's not much you can do on your end, as it's an issue with rust-analyzer itself. However, you can try the following:

1. Update rust-analyzer to the latest version. The developers are constantly making improvements, so it's possible that this issue has been fixed in a newer version.

2. If you're using Visual Studio Code, you can try reloading the window (`Developer: Reload Window` command in the Command Palette) or restarting VS Code. Sometimes this can help with issues like this.

3. If the error is really bothering you, you could consider disabling rust-analyzer for your project or switching to a different Rust language server like RLS.

Remember, this is a rust-analyzer error and not a Rust compiler error. If your code compiles and runs correctly (and passes tests), then it's correct regardless of what rust-analyzer says.