You can use `awk` to extract the language code from the HTML tag. Here is an example:

```bash
curl -Ls stick-it.app | grep -o 'lang="[a-zA-Z-]*"' | head -1 | awk -F'"' '{print $2}'
```

Here is what each part of the command does:

- `curl -Ls stick-it.app`: Fetches the content of the webpage.
- `grep -o 'lang="[a-zA-Z-]*"'`: Extracts the `lang` attribute from the HTML tag. The `-o` option tells `grep` to only output the matched part of the line.
- `head -1`: Takes only the first match.
- `awk -F'"' '{print $2}'`: Splits the line by the `"` character and prints the second field, which is the language code.

This command should work regardless of the position of the `lang` attribute in the HTML tag.