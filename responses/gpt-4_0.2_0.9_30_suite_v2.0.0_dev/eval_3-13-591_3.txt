The reason why you are seeing the logs in the reverse order (2 then 1) is because the `onItemSelected` function is called asynchronously. This means that the rest of your code continues to execute while it waits for an item to be selected. 

In your case, the `return itemSelected` line is being executed before an item is selected, hence it returns an empty string. 

To fix this, you could use a callback function to get the selected item. Here's an example:

```kotlin
fun Spinner.setupListWithAdapter(list: MutableList<String>, callback: (String) -> Unit) {
    val adapter = ArrayAdapter(context, android.R.layout.simple_spinner_item, list)
    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)
    this.adapter = adapter
    this.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
        override fun onItemSelected(p0: AdapterView<*>?, p1: View?, p2: Int, p3: Long) {
            val itemSelected = list[p2]
            Log.e("categoryLog","1 : " + itemSelected)
            callback(itemSelected)
        }
        override fun onNothingSelected(p0: AdapterView<*>?) {
        }
    }
}
```

Then, when you call `setupListWithAdapter`, you can provide a lambda function to handle the selected item:

```kotlin
mySpinner.setupListWithAdapter(myList) { selectedItem ->
    // Do something with selectedItem
    Log.e("categoryLog","2 : " + selectedItem)
}
```

In this way, you ensure that you handle the selected item only after it has been selected.