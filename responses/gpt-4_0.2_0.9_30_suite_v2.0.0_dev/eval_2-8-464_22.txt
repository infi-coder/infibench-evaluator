The error you're encountering is due to the fact that AWS Lambda expects a Linux binary, but you're building your Go application on a Windows machine, which produces a Windows binary. 

To solve this, you need to cross-compile your Go code for Linux platform. Here's how you can do it:

1. Open your terminal
2. Set the environment variables for Linux
    ```
    set GOOS=linux
    set GOARCH=amd64
    ```
3. Build your Go application
    ```
    go build -o main main.go
    ```
4. Zip the binary
    ```
    zip deployment.zip main
    ```
5. Upload `deployment.zip` to AWS Lambda

The `-o main` flag in the `go build` command tells Go to output the build result to a file named `main`. This is important because AWS Lambda expects the binary to be named `main`.

The `GOOS` and `GOARCH` environment variables are used by Go for cross-compiling. `GOOS=linux` tells Go to compile for Linux, and `GOARCH=amd64` tells Go to compile for the AMD64 architecture, which is what AWS Lambda uses.