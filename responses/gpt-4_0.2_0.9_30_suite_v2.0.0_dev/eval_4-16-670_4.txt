Yes, you can convert your OpenSSH private key to a traditional RSA private key using the `ssh-keygen` command. Here's how:

1. Convert OpenSSH private key to RSA private key:

```bash
ssh-keygen -p -m PEM -f ~/.ssh/id_rsa
```

This command will prompt you for the passphrase (if any) of the key. After entering the passphrase, it will write the RSA private key to the same file (`~/.ssh/id_rsa`).

The `-p` option tells `ssh-keygen` to change the passphrase of a private key file. The `-m PEM` option specifies the output format, and `-f ~/.ssh/id_rsa` specifies the file to process.

After running this command, your `id_rsa` file should start with `-----BEGIN RSA PRIVATE KEY-----`.

2. You don't need to convert the public key. The public key file (`id_rsa.pub`) doesn't have a different format for OpenSSH and RSA keys. It should work as is. If you need to regenerate the public key from the private key, you can use the following command:

```bash
ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub
```

This command will overwrite the existing `id_rsa.pub` file with the public key extracted from the private key. The `-y` option tells `ssh-keygen` to read a private key file and print an OpenSSH compatible public key to stdout, and `-f ~/.ssh/id_rsa` specifies the private key file to read. The `> ~/.ssh/id_rsa.pub` part redirects the output to the `id_rsa.pub` file.