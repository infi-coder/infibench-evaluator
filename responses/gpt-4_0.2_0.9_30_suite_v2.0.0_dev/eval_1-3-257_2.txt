Here is a Python function that divides an even number into N parts, each part being a multiple of 2. It first divides the number into N parts as evenly as possible and then distributes the remainder by adding 2 to each group in succession.

```python
def divideNumber(num, n):
    # Calculate the base value and the remainder
    base, rem = divmod(num, n)
    
    # Ensure the base value is a multiple of 2
    if base % 2 != 0:
        base -= 1
        rem += n

    # Create the result list with the base value
    result = [base] * n

    # Distribute the remainder
    i = 0
    while rem > 0:
        result[i] += 2
        rem -= 2
        i = (i + 1) % n

    return result
```

You can test this function with your example:

```python
print(divideNumber(100, 3))  # Output: [34, 34, 32]
```

This function works by first dividing the number into N parts as evenly as possible, ensuring that each part is a multiple of 2. If the base value is not a multiple of 2, it decreases the base value by 1 and increases the remainder accordingly. It then creates a list with the base value and distributes the remainder by adding 2 to each group in succession. The distribution of the remainder is done in a round-robin fashion, starting from the first group and wrapping around to the start when the end is reached.