The issue you're facing is due to the asynchronous nature of the `onItemSelectedListener`. The `onItemSelected` function is not called immediately when you set the listener, it's called later when an item is actually selected. 

That's why your log "2" is showing up before log "1". The function `setupListWithAdapter` continues to execute after setting the listener, and it returns `itemSelected` (which is still an empty string at this point). Only later, when an item is selected, does `onItemSelected` get called and `itemSelected` get updated.

To fix this, you need to change your approach a bit. Instead of trying to return a value from `setupListWithAdapter`, consider using a callback function to handle the selected item. Here's an example:

```kotlin
fun Spinner.setupListWithAdapter(list: MutableList<String>, callback: (String) -> Unit) {
    val adapter = ArrayAdapter(context, android.R.layout.simple_spinner_item, list)
    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)
    this.adapter = adapter
    this.onItemSelectedListener = object : AdapterView.OnItemSelectedListener {
        override fun onItemSelected(p0: AdapterView<*>?, p1: View?, p2: Int, p3: Long) {
            val itemSelected = list[p2]
            Log.e("categoryLog","1 : " + itemSelected)
            callback(itemSelected)
        }
        override fun onNothingSelected(p0: AdapterView<*>?) {
        }
    }
}
```

Now, when you call `setupListWithAdapter`, you can provide a function to handle the selected item:

```kotlin
mySpinner.setupListWithAdapter(myList) { selectedItem ->
    // Do something with selectedItem
}
```

This way, you're not trying to return a value from `setupListWithAdapter`. Instead, you're passing a function that will be called with the selected item when an item is selected.