The error message indicates that Go is unable to find the specific version of the module you're trying to import. This could be due to a number of reasons, such as network issues, incorrect configuration, or access control.

Here are some steps to debug this issue:

1. **Check your network connection**: Make sure that you have a stable internet connection and you are able to access the GitHub repository from your browser.

2. **Check your GitHub credentials**: Make sure that your GitHub credentials are correctly configured on computer B. If you're using SSH to connect to GitHub, make sure that your SSH keys are correctly set up.

3. **Check the module version**: Make sure that the version `v0.1.5` of `github.ibm.com/kms/key-protect-client` actually exists. You can check this by visiting the repository on GitHub and checking the tags.

4. **Check your Go configuration**: Go uses the `GOPROXY` environment variable to determine how to download modules. You can check its value by running `go env`. If it's not set to `direct`, you can try setting it by running `go env -w GOPROXY=direct`. This will make Go download modules directly from their sources instead of using a module proxy.

5. **Check access to private repositories**: If `github.ibm.com/kms/key-protect-client` is a private repository, you need to make sure that your GitHub credentials on computer B have access to this repository. You can check this by trying to clone the repository manually using `git clone`.

6. **Verbose logging**: You can get more detailed logging information by using the `-v` (verbose) flag with the `go get` command, like this: `go get -v github.ibm.com/kms/key-protect-client`.

7. **Clearing the module cache**: Sometimes, the module cache can get corrupted, causing issues. You can clear the module cache by running `go clean -modcache`.

Remember to replace `github.ibm.com/kms/key-protect-client` with the actual path to your module.