Sure, you can use `Object.keys()` and `Array.map()` to achieve this. Here is the function you asked for:

```javascript
function keys_and_prices(raw_obj) {
    let keys = Object.keys(raw_obj);
    let prices = keys.map(key => raw_obj[key].price);
    return [keys, prices];
}
```

This function first gets all the keys from the object using `Object.keys()`. Then it maps over these keys and for each key, it gets the corresponding price from the object. Finally, it returns an array of two arrays: the keys and the prices.

You can use this function with your example like this:

```javascript
var itemsToBuy = { milk: { quantity : 5, price: 20 }, bread: { quantity : 2, price: 15 }, potato: { quantity : 3, price: 10 } }
let ret = keys_and_prices(itemsToBuy)
console.log(ret[0]) // ["milk", "bread", "potato"]
console.log(ret[1]) // [20, 15, 10]
```

Please note that the order of keys and prices in the returned arrays depends on the order of properties in the original object, which is not guaranteed in JavaScript. If you need the keys and prices to be in a specific order, you would need to sort the keys array before mapping it to prices.