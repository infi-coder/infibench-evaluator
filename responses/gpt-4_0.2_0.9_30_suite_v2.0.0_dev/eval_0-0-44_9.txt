To create an index in Mongoose schema using Nest.js, you can use the `@Prop` decorator with the `index` option set to `true` as you have done. However, Mongoose will not automatically build indexes defined in your schema when you start your application. You need to manually tell Mongoose to build the indexes.

You can do this by calling the `Model.syncIndexes()` function in your service or somewhere in your application startup process. Here is an example of how you can do this:

```javascript
import { Injectable, OnModuleInit } from '@nestjs/common';
import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';

@Injectable()
export class MyService implements OnModuleInit {
  constructor(@InjectModel(Schema.name) private readonly myModel: Model<Schema>) {}

  async onModuleInit() {
    await this.myModel.syncIndexes();
  }
}
```

In this example, `MyService` implements the `OnModuleInit` interface, which will call the `onModuleInit` method when the module is initialized. Inside this method, we call `syncIndexes` on the model, which will ensure that all indexes in the schema are created in MongoDB.

Please replace `Schema` and `MyService` with your actual schema and service names.