Sure, you can use the `groupby` function in pandas along with `cumsum` to achieve this. Here is the function:

```python
def aggregation(df):
    # Convert the 'value' column to numeric
    df['value'] = pd.to_numeric(df['value'])
    
    # Create a new column 'balance' where 'type' is 'deposit', else NaN
    df['balance'] = df['value'].where(df['type'] == 'deposit')
    
    # Group by 'exchange' and calculate the cumulative sum, forward filling the NaN values
    df['balance'] = df.groupby('exchange')['balance'].cumsum().ffill()
    
    return df
```

This function first converts the 'value' column to numeric (since it contains strings). Then it creates a new column 'balance' where it copies the 'value' where 'type' is 'deposit', else it puts NaN. Then it groups the DataFrame by 'exchange' and calculates the cumulative sum of 'balance'. The `ffill` function is used to forward fill the NaN values.

You can call this function on your DataFrame like this:

```python
df = aggregation(df)
```

After this, your DataFrame `df` will have the desired 'balance' column.