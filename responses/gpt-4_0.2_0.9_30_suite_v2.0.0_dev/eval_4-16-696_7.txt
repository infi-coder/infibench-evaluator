The problem is that the `$(echo {} | sed 's/\?.*//g')` part is evaluated before the `find` command is executed. So, it's trying to rename the file to the same name. You can solve this by using a bash loop instead:

```bash
find . -type f -name '*\?*' | while read file; do mv "$file" "${file%%\?*}"; done
```

This command will find all files with a '?' in their name, then for each file, it will remove the '?' and everything after it. The `${file%%\?*}` part is a parameter expansion in bash that removes the longest match of `?\*` from the end of the `$file` variable.