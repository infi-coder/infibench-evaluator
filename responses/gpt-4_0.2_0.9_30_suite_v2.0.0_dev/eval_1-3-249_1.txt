Sure, here is a Python function that generates a random 16-character string that includes the substring "NAA3U" and exactly 3 digits:

```python
import random
import string

def generateRandomString():
    # Define the characters to choose from
    chars = string.ascii_letters  # a-z and A-Z

    # Generate two random strings of letters of length 5 each
    part1 = ''.join(random.choice(chars) for _ in range(5))
    part2 = ''.join(random.choice(chars) for _ in range(5))

    # Generate a random digit
    digit1 = str(random.randint(0, 9))
    digit2 = str(random.randint(0, 9))

    # Combine the parts in a random order to form the final string
    parts = [part1, "NAA3U", part2, digit1, digit2]
    random.shuffle(parts)
    final_string = ''.join(parts)

    # Check if the final string has exactly 3 digits
    if sum(c.isdigit() for c in final_string) == 3:
        return final_string
    else:
        return generateRandomString()
```

This function first generates two random strings of letters of length 5 each, and two random digits. It then combines these parts in a random order to form the final string. If the final string does not have exactly 3 digits, the function calls itself again to generate a new string.

Please note that the function uses recursion, which means it calls itself until it generates a string that meets the requirements. This could potentially lead to a stack overflow if the function is unable to generate a valid string after many attempts, but this is highly unlikely given the requirements.