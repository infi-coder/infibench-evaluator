Sure, you can use `groupby` and `cumsum` functions from pandas to achieve this. Here is the function `aggregation`:

```python
def aggregation(df):
    # Ensure that 'value' column is numeric
    df['value'] = pd.to_numeric(df['value'])

    # Create a new column 'balance' which is the cumulative sum of 'value' where 'type' is 'deposit'
    df['balance'] = df[df['type'] == 'deposit'].groupby('exchange')['value'].cumsum()

    # Forward fill the 'balance' column
    df['balance'] = df.groupby('exchange')['balance'].ffill()

    # Fill remaining NaN values with 0
    df['balance'] = df['balance'].fillna(0)

    return df
```

This function first ensures that the 'value' column is numeric. Then it creates a new column 'balance' which is the cumulative sum of 'value' where 'type' is 'deposit'. It then forward fills the 'balance' column within each 'exchange' group. Finally, it fills any remaining NaN values in 'balance' with 0.