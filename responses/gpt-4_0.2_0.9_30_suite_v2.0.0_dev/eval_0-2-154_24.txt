Sure, here's a generator function that should do what you're asking for:

```javascript
function* iterLeafNodes(strhtml, format=[]) {
  const parser = new DOMParser();
  const doc = parser.parseFromString(strhtml, 'text/html');
  const walk = function* (node, format) {
    if (node.nodeType === Node.TEXT_NODE) {
      yield { text: node.textContent, format };
    } else if (node.nodeType === Node.ELEMENT_NODE) {
      format = [...format, node.tagName.toLowerCase()];
      for (const child of node.childNodes) {
        yield* walk(child, format);
      }
    }
  };
  yield* walk(doc.body, format);
}
```

This function uses a recursive approach to walk through the DOM tree. It checks if the current node is a text node, and if so, it yields an object with the text content and the current format. If the node is an element node, it adds the tag name to the format array and recursively walks through the child nodes.