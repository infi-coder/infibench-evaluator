Yes, you're correct. Since Spring 4.3, if a class has only one constructor, the `@Autowired` annotation is no longer necessary. Spring will use that constructor automatically for dependency injection.

People might still use `@Autowired` for a few reasons:

1. **Backward compatibility**: Older versions of Spring required `@Autowired` for constructor injection. If the code needs to be compatible with older versions, `@Autowired` is still used.

2. **Explicitness**: Using `@Autowired` makes it clear that Spring is managing the dependency injection. This can make the code easier to understand for people who are not familiar with the newer Spring features.

3. **Multiple constructors**: If a class has more than one constructor, Spring won't know which one to use for dependency injection. In this case, `@Autowired` is still necessary to indicate the constructor to use.