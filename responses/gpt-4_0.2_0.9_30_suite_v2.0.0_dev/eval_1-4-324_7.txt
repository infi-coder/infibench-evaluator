Here is a function in R that uses the `strsplit` function to split the strings by commas and colons, and then reshapes the data into a data frame:

```r
mySplit <- function(df) {
  # Split the strings by commas
  split_by_comma <- strsplit(df$col1, split = ",")
  
  # Split the resulting strings by colons
  split_by_colon <- lapply(split_by_comma, function(x) strsplit(x, split = ":"))
  
  # Extract the names and values
  names <- sapply(split_by_colon, function(x) sapply(x, `[`, 1))
  values <- sapply(split_by_colon, function(x) sapply(x, `[`, 2))
  
  # Create a data frame from the names and values
  df <- as.data.frame(t(values))
  names(df) <- names[1, ]
  
  return(df)
}
```

This function first splits the strings in `col1` by commas, then splits the resulting strings by colons. It then extracts the names (the parts of the strings before the colons) and the values (the parts of the strings after the colons), and creates a new data frame from these names and values.

You can use this function on your data frame like this:

```r
df <- data.frame(col1 = c("name:Michael,Age:31,City:NYC", "name:Tom,Age:25,City:NA"))
result <- mySplit(df)
print(result)
```

This will print:

```r
     name Age City
1 Michael  31  NYC
2     Tom  25   NA
```