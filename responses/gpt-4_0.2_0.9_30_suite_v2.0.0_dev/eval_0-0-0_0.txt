Sure, here is a function that does exactly what you described:

```javascript
function keys_and_prices(raw_obj) {
    var keys = Object.keys(raw_obj);
    var prices = keys.map(key => raw_obj[key].price);
    return [keys, prices];
}
```

This function first gets all the keys from the input object using `Object.keys()`. Then it maps over these keys and for each key, it gets the corresponding `price` value from the input object. Finally, it returns an array containing the keys and prices arrays.

Here is how you can use it:

```javascript
var itemsToBuy = { milk: { quantity : 5, price: 20 }, bread: { quantity : 2, price: 15 }, potato: { quantity : 3, price: 10 } }
let ret = keys_and_prices(itemsToBuy)
console.log(ret[0]) // ["milk", "bread", "potato"]
console.log(ret[1]) // [20, 15, 10]
```

Please note that the order of keys and prices in the returned arrays depends on the order of properties in the original object, which is not guaranteed in JavaScript. If you need the keys and prices to be sorted in a specific way, you may need to sort the keys array before mapping it to prices.