For the CSRF token mismatch issue, it could be due to a number of reasons. Here are a few things you could check:

1. **Domain Configuration**: Ensure that your domain is correctly configured to point to the `public` directory of your Laravel application. Laravel stores the session files in the `storage/framework/sessions` directory, so if your domain is not correctly configured, the session files may not be correctly stored or accessed.

2. **Session Driver**: You mentioned that you changed the `SESSION_DRIVER` to `file`. This is fine for debugging, but in a production environment, you might want to consider using a more robust session driver like `database` or `redis`.

3. **Cookie Domain**: If your application is under a subdomain, you might need to set the `SESSION_DOMAIN` in your `.env` file to your root domain. For example, if your application is at `app.example.com`, you would set `SESSION_DOMAIN=.example.com`.

4. **HTTPS**: If your application is served over HTTPS, ensure that the `SESSION_SECURE_COOKIE` is set to `true` in your `.env` file.

For the email sending issue, the error message suggests that there's a problem with the SSL configuration. Here are a few things you could try:

1. **Encryption Method**: Try changing the `MAIL_ENCRYPTION` in your `.env` file from `ssl` to `tls`. Some servers require `tls` instead of `ssl`.

2. **Port Number**: The port number `587` is typically used with `tls`. If you're using `ssl`, the port number should typically be `465`. So if you stick with `ssl`, try changing `MAIL_PORT` to `465`.

3. **Server Configuration**: It's possible that the mail server requires specific SSL settings. You might need to contact the server administrator or check the server documentation for the correct settings.

4. **Firewall or Security Software**: If you're running any firewall or security software, it might be blocking the connection. Try disabling it temporarily to see if it solves the problem.