Sure, here is a function that does exactly that:

```javascript
function keys_and_prices(raw_obj) {
    let keys = Object.keys(raw_obj);
    let prices = keys.map(key => raw_obj[key].price);
    return [keys, prices];
}
```

This function first extracts the keys from the object using `Object.keys()`. Then it uses `Array.map()` to create a new array where each element is the `price` field of the corresponding key in the original object. Finally, it returns an array containing the keys and prices arrays.

Here is how you can use it:

```javascript
var itemsToBuy = { milk: { quantity : 5, price: 20 }, bread: { quantity : 2, price: 15 }, potato: { quantity : 3, price: 10 } }
let ret = keys_and_prices(itemsToBuy)
console.log(ret[0]) // ["milk", "bread", "potato"]
console.log(ret[1]) // [20, 15, 10]
```

Please note that the `==` operator in JavaScript does not compare the contents of arrays. If you want to compare the contents of arrays, you can use `JSON.stringify()`:

```javascript
assert(JSON.stringify(ret[0]) === JSON.stringify(["milk", "bread", "potato"]))
assert(JSON.stringify(ret[1]) === JSON.stringify([20, 15, 10]))
```