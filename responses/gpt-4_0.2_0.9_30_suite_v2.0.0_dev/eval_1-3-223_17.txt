You can use the `pkg_resources` module to get the installed version of a package, and the `packaging.version` module to compare versions. Here is a function that does this:

```python
import pkg_resources
from packaging import version

def checkVersion(pkgName):
    try:
        # Get the latest version
        url = f"https://pypi.python.org/pypi/{pkgName}/json"
        releases = requests.get(url).json()['releases']
        latest_version = max(releases, key=version.parse)

        # Get the installed version
        installed_version = pkg_resources.get_distribution(pkgName).version

        # Compare the versions
        return version.parse(installed_version) >= version.parse(latest_version)
    except Exception as e:
        print(f"An error occurred: {e}")
        return False
```

This function will return `True` if the installed version of the package is up-to-date, and `False` otherwise. Note that it requires the `requests` module to fetch the latest version from PyPI. If the package is not installed or an error occurs, it will also return `False`.

Please note that this function will not work in a virtual environment where the package is not installed. Also, it will not work if the package is not available on PyPI.