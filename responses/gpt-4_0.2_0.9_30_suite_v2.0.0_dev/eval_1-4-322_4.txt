You can use the `split` function in R to achieve this. The `split` function divides the data in the vector input into the groups specified by the factor input. Here is the function `myConvert`:

```r
library(tidyverse)

myConvert <- function(my_data) {
  my_data %>%
    split(.$list_names) %>%
    map(~ pull(., list_values))
}
```

In this function, we first split the data by the `list_names` column. This creates a list of tibbles, each named by the unique values in `list_names`. Then, we use `map` to apply the `pull` function to each tibble in the list, extracting the `list_values` column. This gives us a named list where the names are the unique values of `list_names` and the list elements are all the values of `list_values` for each group.

You can test this function with your example data:

```r
my_data <- tibble(list_names = c("Ford", "Chevy", "Ford", "Dodge", "Dodge", "Ford"),
                  list_values = c("Ranger", "Equinox", "F150", "Caravan", "Ram", "Explorer"))

myConvert(my_data)
```

This will give you the desired output.