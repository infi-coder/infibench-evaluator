Here is a Python function that uses the `re` module to split the input string at dashes and underscores, then uses the `str.join` method to concatenate the words together in camel case:

```python
import re

def to_camel_case(text):
    words = re.split('-|_', text)
    return words[0] + ''.join(word.title() for word in words[1:])
```

This function first splits the input string into a list of words. Then it returns a new string that starts with the first word and appends each subsequent word in title case (i.e., with the first letter capitalized). This results in a camel case string.

Here's how it works on your test cases:

```python
print(to_camel_case(''))  # ''
print(to_camel_case("the_stealth_warrior"))  # 'theStealthWarrior'
print(to_camel_case("The-Stealth-Warrior"))  # 'TheStealthWarrior'
print(to_camel_case("A-B-C"))  # 'ABC'
```

This function assumes that the input string contains only words separated by dashes or underscores, and that the first word is not preceded by a dash or underscore. If these assumptions are not met, the function may not work as expected.