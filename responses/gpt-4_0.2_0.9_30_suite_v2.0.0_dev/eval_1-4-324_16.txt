Here is a function that uses the `strsplit` function in R to split the strings in your column by the commas and colons. It then uses the `rbind` function to combine the split strings into a new data frame.

```r
mySplit <- function(df) {
  # Initialize an empty data frame
  new_df <- data.frame()
  
  # Loop over each row in the input data frame
  for(i in 1:nrow(df)) {
    # Split the string in the current row by commas
    split_commas <- strsplit(as.character(df[i, "col1"]), ",")[[1]]
    
    # Split each resulting string by colons
    split_colons <- strsplit(split_commas, ":")
    
    # Extract the values (i.e., the second element of each split_colons)
    values <- sapply(split_colons, function(x) x[2])
    
    # Convert the values to a data frame and add it to new_df
    new_df <- rbind(new_df, as.data.frame(t(values), stringsAsFactors = FALSE))
  }
  
  # Set the column names of new_df
  colnames(new_df) <- c("name", "Age", "City")
  
  return(new_df)
}
```

You can use this function on your data frame `df` like this:

```r
df <- data.frame(col1 = c("name:Michael,Age:31,City:NYC", "name:Tom,Age:25,City:NA"))
new_df <- mySplit(df)
print(new_df)
```

This will print:

```r
     name Age City
1 Michael  31  NYC
2     Tom  25   NA
```

Please note that this function assumes that the strings in your `col1` column always have the same format (i.e., "name:...,Age:...,City:..."). If the format can vary, you might need to adjust the function accordingly.