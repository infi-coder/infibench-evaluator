You can achieve this by using the `groupby` and `cumsum` functions in pandas. Here is how you can do it:

```python
def aggregation(df):
    # Convert the 'value' column to integer type
    df['value'] = df['value'].astype(int)

    # Create a new column 'balance' where 'type' is 'deposit', else NaN
    df['balance'] = df['value'].where(df['type'] == 'deposit')

    # Group by 'exchange' and calculate the cumulative sum, forward filling the NaN values
    df['balance'] = df.groupby('exchange')['balance'].cumsum().ffill()

    return df
```

This function first converts the 'value' column to integer type. Then it creates a new column 'balance' where it copies the values from 'value' column if 'type' is 'deposit', else it puts NaN. After that, it groups the DataFrame by 'exchange' and calculates the cumulative sum of 'balance' within each group. The `ffill` function is used to forward fill the NaN values with the last valid observation within each group.