Here is a function `mySplit` that uses the `strsplit` function to split the strings by comma and colon, and then reshapes the data into a data frame.

```r
mySplit <- function(df) {
  # Split the strings by comma
  split_comma <- strsplit(df$col1, ",")
  
  # Split the strings by colon
  split_colon <- lapply(split_comma, function(x) strsplit(x, ":"))
  
  # Extract the names and values
  names <- sapply(split_colon, function(x) sapply(x, "[[", 1))
  values <- sapply(split_colon, function(x) sapply(x, "[[", 2))
  
  # Create a data frame
  df_new <- as.data.frame(t(values), stringsAsFactors = FALSE)
  names(df_new) <- names[1, ]
  
  return(df_new)
}
```

You can use this function on your data frame as follows:

```r
df <- data.frame(col1 = c("name:Michael,Age:31,City:NYC", "name:Tom,Age:25,City:NA"))
df_new <- mySplit(df)
print(df_new)
```

This will output:

```r
     name Age City
1 Michael  31  NYC
2     Tom  25   NA
```

This function assumes that all rows in your data frame have the same structure (i.e., the same names in the same order). If this is not the case, you may need to adjust the function to handle different structures.