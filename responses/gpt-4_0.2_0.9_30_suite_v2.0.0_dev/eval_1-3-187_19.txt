Here is a Python function that does what you want. It first creates a dictionary mapping from the first four elements of `b` to the corresponding elements in `rest`. Then it uses a list comprehension to create a new list where each element is either replaced by its corresponding value in the dictionary, or left as is if it's not in the dictionary.

```python
def ReplaceElementsByIndex(rest, b, last):
    replace_dict = dict(zip(b[:4], rest))
    return [replace_dict.get(x, x) for x in last]
```

This function works by iterating over each element in `last`. If the element is in `replace_dict` (i.e., it's one of the first four elements of `b`), it gets replaced by the corresponding value from `rest`. If it's not in `replace_dict`, it gets left as is.

Here's how you can use this function with your example data:

```python
rest=[5, 7, 11, 4]
b=[21, 22, 33, 31, 23, 15, 19, 13, 6]
last=[33, 19, 40, 21, 31, 22, 6, 15, 13, 23]

print(ReplaceElementsByIndex(rest, b, last))
```

This will output:

```python
[11, 19, 40, 5, 4, 7, 6, 15, 13, 23]
```