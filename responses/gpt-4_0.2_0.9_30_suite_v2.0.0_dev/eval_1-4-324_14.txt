Here is a function `mySplit` that uses the `strsplit` function to split the strings in `col1` by comma and colon, and then reshapes the data into a data frame:

```r
mySplit <- function(df) {
  # Split the strings in col1 by comma and colon
  split_data <- strsplit(as.character(df$col1), ",|:")
  
  # Create a matrix from the split data
  matrix_data <- matrix(unlist(split_data), ncol = 2, byrow = TRUE)
  
  # Convert the matrix to a data frame
  df_split <- data.frame(matrix_data)
  
  # Set the names of the data frame
  names(df_split) <- df_split[1, ]
  
  # Remove the first row of the data frame
  df_split <- df_split[-1, ]
  
  # Convert the Age column to numeric
  df_split$Age <- as.numeric(df_split$Age)
  
  return(df_split)
}
```

You can use this function on your data frame `df` like this:

```r
df <- data.frame(col1 = c("name:Michael,Age:31,City:NYC", "name:Tom,Age:25,City:NA"))
df_split <- mySplit(df)
print(df_split)
```

This will print:

```r
      name Age City
2  Michael  31  NYC
3      Tom  25   NA
```

Please note that this function assumes that the strings in `col1` are always in the format "name:Name,Age:Age,City:City". If the format of the strings in `col1` can vary, you may need to modify this function to handle the different formats.