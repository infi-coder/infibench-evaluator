Here is a Python function that divides an even number into N parts, each part being a multiple of 2:

```python
def divideNumber(num, n):
    quotient, remainder = divmod(num, n)
    # Ensure quotient is even
    if quotient % 2 != 0:
        quotient -= 1
        remainder += n
    # Distribute the remainder
    result = [quotient + 2] * (remainder // 2) + [quotient] * (n - remainder // 2)
    return result
```

This function first divides `num` by `n` to get the quotient and the remainder. If the quotient is not even, it subtracts 1 from the quotient and adds `n` to the remainder. Then it distributes the remainder by adding 2 to each part of the result list until the remainder is exhausted.

Here is how you can use this function:

```python
print(divideNumber(100, 3))  # Output: [34, 34, 32]
```

This function assumes that `num` is an even number and `n` is a positive integer. If `num` is not even or `n` is not a positive integer, the function may not work as expected.