The error message you're seeing indicates that Go is unable to find the specified version of the module. This could be due to a number of reasons, but here are a few things you can try to debug this issue:

1. **Check your network connection:** Make sure that you have a stable internet connection and that you can access the repository from your browser.

2. **Check your Go version:** Ensure that you're using the same Go version on both computers. You can check your Go version by running `go version` in your terminal.

3. **Check your Go environment variables:** Run `go env` to check your Go environment variables. Make sure that `GOPRIVATE` or `GONOPROXY` includes the domain of your private repository.

4. **Check your Git configuration:** If the repository is private, you need to make sure that your Git is configured correctly to access private repositories. You can do this by running `git config --global --get url."https://".insteadOf` in your terminal. The output should be `https://`.

5. **Check your GitHub credentials:** Make sure that your GitHub credentials are correctly set up on computer B. If you're using HTTPS to clone the repository, you might need to cache your GitHub password in Git using a credential helper.

6. **Try to manually download the module:** You can try to manually download the module by running `go get github.ibm.com/kms/key-protect-client@v0.1.5`.

7. **Clear your Go module cache:** If all else fails, you can try to clear your Go module cache by running `go clean -modcache`.

Remember to replace `github.ibm.com/kms/key-protect-client@v0.1.5` with the actual module path and version that you're trying to download.