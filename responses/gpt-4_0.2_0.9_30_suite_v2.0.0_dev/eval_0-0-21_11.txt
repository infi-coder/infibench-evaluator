You can use the `navigator.clipboard.writeText` function to copy text to the clipboard. Here is your code with the `copyText` method filled in:

```html
<template>
    <div id="app">
      <v-app id="inspire">
        <v-container>
          <v-text-field v-model="text1"></v-text-field>
          <v-btn @click="copyText">copy</v-btn>
        </v-container>
      </v-app>
    </div>
</template>

<script>
    new Vue({
      el: '#app',
      vuetify: new Vuetify(),
      data() { 
        return {
          text1: 'lorem ipsum 123'
        }
      },
      methods: {
        copyText () {
          navigator.clipboard.writeText(this.text1).then(function() {
            console.log('Copying to clipboard was successful!');
          }, function(err) {
            console.error('Could not copy text: ', err);
          });
        }
      }
    })
</script>
```

In the `copyText` method, we are using the `navigator.clipboard.writeText` function to copy the text from the `text1` data property to the clipboard. The `writeText` function returns a promise that is resolved when the text has been successfully copied to the clipboard. If the copy operation fails for any reason, the promise is rejected and the error is logged to the console.