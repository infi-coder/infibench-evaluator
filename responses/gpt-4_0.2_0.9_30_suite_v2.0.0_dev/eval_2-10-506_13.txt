You can use the `iter()` method in combination with the `min()` function to find the minimum value in a vector in Rust. Here is how you can do it:

```rust
let v = vec![5, 6, 8, 4, 2, 7];
let min = v.iter().min();

match min {
    Some(min) => println!("The minimum value is {}", min),
    None => println!("The vector is empty"),
}
```

In this code, `v.iter().min()` returns an `Option` that contains the minimum value if the vector is not empty, or `None` if it is. The `match` statement is then used to handle both possibilities. If the vector is not empty, it prints the minimum value; if it is, it prints a message saying so.