The problem you're facing is because you're trying to format a `LocalDate` object using `SimpleDateFormat` which is used for `Date` objects. `LocalDate` does not contain time information, so you cannot format it to include time. 

You should use `LocalDateTime` instead of `LocalDate` and `DateTimeFormatter` instead of `SimpleDateFormat`. 

Here is the corrected code:

```java
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.Period;
import java.util.Random;

public class Main {
  public static void main(String[] args) {
    System.out.println(generateRandomDateAndTimeInString());
  }

  public static String generateRandomDateAndTimeInString() {
    LocalDateTime dateTime = LocalDateTime.now().minus(Period.ofDays((new Random().nextInt(365 * 70))));
    System.out.println("date and time :: " + dateTime.toString());
    return formatDate(dateTime);
  }

  public static String formatDate(LocalDateTime dateTime){
    DateTimeFormatter dateFormat = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss'Z'");
    return dateTime.format(dateFormat);
  }
}
```

This will generate a random date and time in the past 70 years, and format it as you want. 

Please note that the 'Z' at the end of your format string stands for the Zulu time zone, which is equivalent to UTC. If you want to include the actual time zone offset in your formatted string, you can use 'X' instead of 'Z'.