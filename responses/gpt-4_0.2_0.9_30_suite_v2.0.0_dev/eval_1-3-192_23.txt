Here is a Python function that uses the `re` module to split the input string at dashes and underscores, then uses the `str.capitalize` method to capitalize the first letter of each word except the first one, and finally joins them together:

```python
import re

def to_camel_case(text):
    words = re.split('-|_', text)
    return words[0] + ''.join(word.capitalize() for word in words[1:])
```

This function works by first splitting the input string into a list of words. The `re.split` function is used with a regular expression that matches either a dash or an underscore, so it will correctly split the input string regardless of whether it uses dashes, underscores, or a mix of both to separate words.

Then, it uses a list comprehension to generate a new list of words where each word except the first one is capitalized. The `str.capitalize` method is used to capitalize the first letter of each word.

Finally, it joins the words back together into a single string using the `str.join` method. The first word is added to the beginning of the string without any changes, and the rest of the words are added with their first letter capitalized. This ensures that the first word in the output string will be capitalized only if it was capitalized in the input string, as required by the problem statement.