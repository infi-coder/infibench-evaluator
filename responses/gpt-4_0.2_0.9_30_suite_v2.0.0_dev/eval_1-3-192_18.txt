Here is a Python solution using the `re` module to find all words in the input string, and then using the `str.capitalize()` method to capitalize the first character of each word except the first one:

```python
import re

def to_camel_case(text):
    words = re.findall(r'\b\w+\b', text)
    return words[0] + ''.join(word.capitalize() for word in words[1:])
```

This function works by first splitting the input string into words using the regular expression `\b\w+\b`, which matches any sequence of word characters that are surrounded by word boundaries. The `re.findall()` function returns a list of all matches.

Then, it returns a new string that is formed by concatenating the first word with the rest of the words, each of which has been capitalized using the `str.capitalize()` method. This method returns a copy of the original string with its first character capitalized and the rest lowercased.

This function assumes that the input string does not contain any leading, trailing, or consecutive delimiters, and that the first word is not empty. If these assumptions do not hold, the function may not work correctly.