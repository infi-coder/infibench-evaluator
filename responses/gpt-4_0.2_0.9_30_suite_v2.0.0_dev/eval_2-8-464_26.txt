The error you're encountering is due to the fact that AWS Lambda expects a Linux executable, but you're building your Go application on a Windows machine, which produces a Windows executable. 

To solve this issue, you need to cross-compile your Go code to create a Linux executable. Here's how you can do it:

1. Set the `GOOS` and `GOARCH` environment variables to `linux` and `amd64` respectively. This tells the Go compiler to create a Linux executable.

2. Build your Go application with the `go build` command.

Here's how you can do it in your command line:

```bash
SET GOOS=linux
SET GOARCH=amd64
go build -o main main.go
```

This will create a Linux executable named `main`.

3. Zip the `main` executable:

```bash
zip function.zip main
```

4. Now, you can upload `function.zip` to AWS Lambda.

Remember to set the handler name as `main` when you upload the zip file to AWS Lambda. 

After these steps, your Lambda function should work as expected.