The comment is partially correct. A constructor is indeed a special method in a class that gets called automatically when a new instance of the class is created. However, it is not entirely correct to say that a constructor cannot be called or that it is not a function.

In many programming languages, including JavaScript, Java, C++, and others, a constructor is a special type of function/method. It is designed to initialize an object's state. While it's true that constructors are typically invoked automatically when an object is created (using the `new` keyword), they can also be called explicitly in some circumstances.

For example, in JavaScript, you can call a constructor directly like this:

```javascript
function MyClass() {
  // constructor body
}

// Create a new instance (this calls the constructor)
var obj = new MyClass();

// Call the constructor directly (not typical, but possible)
MyClass.call(obj);
```

In Java, you can also call a superclass's constructor using `super()` in a subclass's constructor.

So, while the comment captures a common use of constructors, it is not entirely accurate in saying that a constructor cannot be called or that it is not a function.