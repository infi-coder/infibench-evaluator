Here is a Python function that should solve your problem:

```python
def divideNumber(num, n):
    # Calculate the base value and the remainder
    base, remainder = divmod(num, n)
    
    # Ensure the base value is a multiple of 2
    if base % 2 != 0:
        base -= 1
        remainder += n

    # Create the result list with the base value
    result = [base] * n

    # Distribute the remainder
    for i in range(remainder // 2):
        result[i % n] += 2

    return result
```

This function first calculates the base value and the remainder. If the base value is not a multiple of 2, it decreases the base value by 1 and increases the remainder accordingly. Then it creates a list with the base value. Finally, it distributes the remainder by adding 2 to each group in succession.

Let's test this function with your example:

```python
print(divideNumber(100, 3))  # Output: [34, 34, 32]
```

This function should work for any even number and any number of parts. However, it assumes that the number of parts is less than or equal to the number itself. If the number of parts is greater than the number, it will return a list with the number of parts, but some of them will be 0.