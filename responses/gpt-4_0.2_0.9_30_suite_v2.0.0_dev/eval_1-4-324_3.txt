Here is a function `mySplit` that uses the `strsplit` function to split the strings in `col1` by commas and colons, and then reshapes the data into a data frame:

```r
mySplit <- function(df) {
  # Split the strings in col1 by commas and colons
  split_strings <- strsplit(as.character(df$col1), ",|:")
  
  # Extract the column names and values
  col_names <- sapply(split_strings, function(x) x[seq(1, length(x), 2)])
  col_values <- sapply(split_strings, function(x) x[seq(2, length(x), 2)])
  
  # Create a data frame from the column names and values
  df_new <- data.frame(matrix(unlist(col_values), nrow = length(col_values), byrow = TRUE))
  names(df_new) <- col_names[1, ]
  
  # Return the new data frame
  return(df_new)
}
```

This function first splits the strings in `col1` by commas and colons, then extracts the column names and values from the split strings. It then creates a new data frame from the column names and values, and returns this new data frame.

Please note that this function assumes that all rows in `col1` have the same format (i.e., they all have the same column names in the same order). If this is not the case, you may need to modify the function to handle different formats.