The comment is partially correct. 

A constructor is indeed not a function in the traditional sense. It is a special method in a class in object-oriented programming languages like JavaScript, Java, C++, etc. 

However, the statement "A constructor cannot be called" is not entirely accurate. While it's true that constructors are automatically invoked when a new object is created, they can also be explicitly called using the `new` keyword in many programming languages.

For example, in JavaScript:

```javascript
class MyClass {
  constructor() {
    console.log('Constructor was called');
  }
}

let myObject = new MyClass(); // Outputs: Constructor was called
```

In this example, the constructor is called when `new MyClass()` is executed.

So, the comment is correct in saying that a constructor is not a function and that it is invoked automatically when a new object is created. But it's not entirely correct in saying that a constructor cannot be called, as it can be explicitly invoked when creating a new object.