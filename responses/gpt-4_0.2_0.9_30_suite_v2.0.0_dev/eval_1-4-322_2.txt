You can achieve this by using the `split()` function in R, which divides the data into subsets based on the levels of a factor. Here is how you can write the `myConvert` function:

```r
library(tidyverse)

myConvert <- function(my_data) {
  my_data %>%
    split(.$list_names) %>%
    map(~ pull(., list_values))
}
```

In this function, we first split the `my_data` tibble into subsets based on the `list_names` column. Then, we use the `map()` function from the `purrr` package (which is part of `tidyverse`) to apply the `pull()` function to each subset. The `pull()` function extracts the `list_values` column from each subset.

Now, you can use this function with your `my_data` tibble:

```r
my_data <- tibble(list_names = c("Ford", "Chevy", "Ford", "Dodge", "Dodge", "Ford"),
list_values = c("Ranger", "Equinox", "F150", "Caravan", "Ram", "Explorer"))

myConvert(my_data)
```

This will give you the desired output:

```r
$Chevy
[1] "Equinox"

$Dodge
[1] "Caravan" "Ram"    

$Ford
[1] "Ranger"   "F150"     "Explorer"
```