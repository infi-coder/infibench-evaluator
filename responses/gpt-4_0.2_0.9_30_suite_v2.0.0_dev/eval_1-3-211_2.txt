You can achieve this by using the `groupby` and `cumsum` functions provided by pandas. Here is how you can do it:

```python
def aggregation(df):
    # First, ensure that the 'value' column is of numeric type
    df['value'] = pd.to_numeric(df['value'])

    # Create a new column 'balance' which is the cumulative sum of 'value' where 'type' is 'deposit'
    df['balance'] = df.loc[df['type'] == 'deposit'].groupby('exchange')['value'].cumsum()

    # Forward fill the 'balance' column
    df['balance'] = df.groupby('exchange')['balance'].ffill()

    # Fill NaN values with 0
    df['balance'] = df['balance'].fillna(0)

    return df
```

This function first converts the 'value' column to numeric type. Then it creates a new column 'balance' which is the cumulative sum of 'value' where 'type' is 'deposit', grouped by 'exchange'. After that, it forward fills the 'balance' column within each 'exchange' group. Finally, it fills any remaining NaN values with 0 and returns the modified DataFrame.