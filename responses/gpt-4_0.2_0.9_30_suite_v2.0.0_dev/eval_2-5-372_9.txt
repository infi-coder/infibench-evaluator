It seems like you're facing a version conflict issue. Hibernate Validator 5.x doesn't support `@NotEmpty` and `@NotBlank` for `String` types. These constraints are supported from Hibernate Validator 6.x onwards.

The version of Hibernate Validator that's being used is the one that comes with your application server (JBoss), which is 5.3.5.Final-redhat-2, as you can see in your logs. This version doesn't support `@NotEmpty` and `@NotBlank` for `String` types.

To solve this issue, you can try one of the following solutions:

1. **Upgrade your application server to a version that includes Hibernate Validator 6.x.** This might not be possible due to other constraints.

2. **Exclude the Hibernate Validator that comes with your application server and include the correct version in your application.** This can be done by adding the following dependency to your `pom.xml`:

```xml
<dependency>
    <groupId>org.hibernate.validator</groupId>
    <artifactId>hibernate-validator</artifactId>
    <version>6.0.11.Final</version>
</dependency>
```

And excluding the Hibernate Validator from your application server. This can be done by adding a `jboss-deployment-structure.xml` file in your `WEB-INF` directory with the following content:

```xml
<jboss-deployment-structure>
    <deployment>
        <exclusions>
            <module name="org.hibernate.validator" />
        </exclusions>
    </deployment>
</jboss-deployment-structure>
```

Please note that this might cause issues if other parts of your application server rely on the specific version of Hibernate Validator that it comes with.

3. **Use a different validation constraint that is supported by Hibernate Validator 5.x.** For example, you can use `@Pattern(regexp=".+")` to validate that a `String` is not empty. This might not be ideal as it changes the semantics of your validation constraints.