The issue you're facing is due to the way you're handling the click event on the button. You're mixing JavaScript and React, which is causing the problem. In React, you should use the `onClick` event handler instead of `onclick` and you don't need to define a function inside a script tag. 

Here's the corrected version of your code:

```javascript
import React, { Component } from 'react'

class Main extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      imageURL: '',
    };

    this.handleUploadImage = this.handleUploadImage.bind(this);
  }

  handleUploadImage(ev) {
    ev.preventDefault();

    const data = new FormData();
    data.append('file', this.uploadInput.files[0]);
    data.append('filename', this.fileName.value);

    fetch('http://localhost:8000/upload', {
      method: 'POST',
      body: data,
    }).then((response) => {
      response.json().then((body) => {
        this.setState({ imageURL: `http://localhost:8000/${body.file}` });
      });
    });

    alert("Your file is being uploaded!");
  }

  render() {
    return (
      <form onSubmit={this.handleUploadImage}>
        <div>
          <input ref={(ref) => { this.uploadInput = ref; }} type="file" />
        </div>
        <div>
          <input ref={(ref) => { this.fileName = ref; }} type="text" placeholder="Enter the desired name of file" />
        </div>
        <br />
        <div>
          <button type="submit">Upload</button>
        </div>
        <img src={this.state.imageURL} alt="img" />
      </form>
    );
  }
}

export default Main;
```

In this version, I've moved the alert into the `handleUploadImage` function and removed the script tag. I've also changed the `onclick` attribute to `type="submit"` on the button, which will trigger the form's `onSubmit` event when clicked.