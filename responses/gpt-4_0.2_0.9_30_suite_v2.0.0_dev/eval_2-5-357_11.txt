Yes, you're correct. Starting from Spring 4.3, if a class, which is annotated with `@Component` or `@Service`, has a single constructor, the `@Autowired` annotation on that constructor is no longer necessary. Spring will use that constructor for autowiring by default.

People might still use `@Autowired` on constructors for a few reasons:

1. **Backward compatibility**: If the codebase needs to be compatible with older versions of Spring where `@Autowired` is required.

2. **Explicitness**: It makes the code more explicit, showing clearly that the constructor is used for autowiring.

3. **Multiple constructors**: If a class has more than one constructor, and you want to specify which one to use for autowiring, you still need to use `@Autowired`.

So, while it's not necessary to use `@Autowired` on single constructor classes anymore, there are still scenarios where it might be used.