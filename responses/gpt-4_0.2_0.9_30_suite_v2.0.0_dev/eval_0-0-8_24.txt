Sure, here is a recursive function in JavaScript that will find the object by `id` in a nested object tree:

```javascript
function findObject(id, root_node) {
    if (root_node.id === id) {
        return root_node;
    } else if (root_node.child) {
        var result = null;
        for (var i = 0; result == null && i < root_node.child.length; i++) {
            result = findObject(id, root_node.child[i]);
        }
        return result;
    }
    return null;
}
```

This function works by checking if the current node's `id` matches the target `id`. If it does, it returns the current node. If it doesn't, it recursively checks each of the current node's children. If a match is found in a subtree, it is returned. If no match is found in any subtree, `null` is returned.