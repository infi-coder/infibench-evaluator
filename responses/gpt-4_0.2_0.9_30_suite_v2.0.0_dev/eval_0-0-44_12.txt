To create an index in Mongoose schema using Nest.js, you can use the `@Prop` decorator with the `index` option set to `true`. However, Mongoose will not automatically build indexes defined in your schema. You need to manually trigger the index building using the `Model.ensureIndexes()` function.

Here is how you can do it:

```javascript
import { Injectable, OnModuleInit } from '@nestjs/common';
import { InjectModel } from '@nestjs/mongoose';
import { Model } from 'mongoose';

@Injectable()
export class MyService implements OnModuleInit {
  constructor(@InjectModel('Schema') private readonly myModel: Model<Schema>) {}

  async onModuleInit(): Promise<void> {
    await this.myModel.init(); // This will ensure the indexes are created
  }
}
```

In this code, `onModuleInit` is a lifecycle event handler method that is called when the Nest.js module containing the service is fully initialized. The `myModel.init()` function is called inside this method to ensure that the indexes are created.

Please replace `'Schema'` with your actual model name.

Also, ensure that the MongoDB server is running and the connection is established before calling `Model.init()`. If the server is not running or the connection is not established, Mongoose will not be able to create the indexes.