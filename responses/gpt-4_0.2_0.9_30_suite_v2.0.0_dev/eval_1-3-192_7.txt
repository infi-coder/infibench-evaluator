Here is a Python function that uses the `re` module to split the input string at dashes and underscores, then uses the `str.join()` method to concatenate the words together in camel case:

```python
import re

def to_camel_case(text):
    words = re.split('-|_', text)
    return words[0] + ''.join(word.title() for word in words[1:])
```

This function works by first splitting the input string into a list of words. The `re.split()` function is used with a regular expression that matches either a dash or an underscore, so the string is split at either character.

The list of words is then joined together into a single string with the `str.join()` method. The first word in the list is added to the string as is, and then each subsequent word is added after being converted to title case with the `str.title()` method. This ensures that the first letter of each word is capitalized, which is the defining characteristic of camel case.

The `str.title()` method returns a copy of the original string with the first character capitalized and the rest lowercased. This is exactly what we need for camel case, except for the first word, which should retain its original capitalization. This is why the first word is added to the string separately before the rest of the words are processed.