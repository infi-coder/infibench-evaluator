In SwiftUI, there is currently no built-in way to get the current scroll position of a `ScrollView`. The `ScrollViewReader` and `ScrollViewProxy` only provide the `scrollTo` method, which allows you to programmatically set the scroll position, but not retrieve it.

However, you can use `GeometryReader` to get the scroll offset. Here is a basic example:

```swift
ScrollView {
    GeometryReader { geometry in
        Color.clear.preference(key: ViewOffsetKey.self, value: geometry.frame(in: .named("scrollView")).minY)
    }
    .frame(height: 0)

    // Your ScrollView content here
}
.coordinateSpace(name: "scrollView")
.onPreferenceChange(ViewOffsetKey.self) { offset in
    print("Current scroll offset: \(offset)")
}

struct ViewOffsetKey: PreferenceKey {
    static var defaultValue: CGFloat = 0
    static func reduce(value: inout CGFloat, nextValue: () -> CGFloat) {
        value += nextValue()
    }
}
```

This code uses `GeometryReader` to read the `minY` value of the `ScrollView`'s frame, which changes as you scroll. The `onPreferenceChange` modifier is then used to print the current scroll offset whenever it changes.

Please note that this is a workaround and may not work perfectly in all situations. As of now, SwiftUI does not provide a direct way to get the current scroll position of a `ScrollView`.