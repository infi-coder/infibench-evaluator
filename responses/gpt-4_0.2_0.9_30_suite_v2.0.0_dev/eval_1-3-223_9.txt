You can use the `pkg_resources` module to get the installed version of a package, and the `pip` module to get the latest version available on PyPI. Here is a function that does this:

```python
import pkg_resources
import xmlrpc.client

def checkVersion(pkgName):
    pypi = xmlrpc.client.ServerProxy('https://pypi.python.org/pypi')
    available = pypi.package_releases(pkgName)
    if not available:  # package not found
        return False
    available = available[0]  # get the latest version available
    installed = pkg_resources.get_distribution(pkgName).version
    return installed == available
```

This function returns `True` if the installed version of the package is the latest, and `False` otherwise. If the package is not found on PyPI, it also returns `False`.

Please note that this function may not work correctly if the package is not installed or if it is not available on PyPI. You may want to add error handling code to handle these situations.