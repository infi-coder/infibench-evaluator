Sure, you can achieve this by using the `groupby` and `cumsum` functions provided by pandas. Here is the function `aggregation`:

```python
def aggregation(df):
    # Ensure the 'value' column is numeric
    df['value'] = pd.to_numeric(df['value'])
    
    # Create a new column 'balance' which is the cumulative sum of 'value' where 'type' is 'deposit'
    df['balance'] = df[df['type'] == 'deposit'].groupby('exchange')['value'].cumsum()
    
    # Forward fill the 'balance' column
    df['balance'] = df['balance'].fillna(method='ffill')
    
    # Fill remaining NaNs in 'balance' with 0
    df['balance'] = df['balance'].fillna(0)
    
    return df
```

This function first ensures that the 'value' column is numeric. Then it creates a new column 'balance' which is the cumulative sum of 'value' where 'type' is 'deposit', grouped by 'exchange'. It then forward fills the 'balance' column to fill any NaNs that may have been created by the groupby operation. Finally, it fills any remaining NaNs in 'balance' with 0 and returns the modified DataFrame.