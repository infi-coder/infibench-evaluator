Here is a function that does what you need:

```python
import numpy as np

def getMax(matrix):
    # Convert the input to a numpy array (in case it's a list)
    matrix = np.array(matrix)
    
    # Select the third column from each 2D array in the 3D array
    third_column = matrix[:,:,2]
    
    # Find the max value in each selected column
    max_values = np.max(third_column, axis=1)
    
    # Reshape the result to a 2D array
    max_values = max_values.reshape(-1, 1)
    
    return max_values
```

This function works by first selecting the third column from each 2D array in the 3D array using numpy's advanced indexing. Then it finds the max value in each selected column using `np.max` with `axis=1` (which operates along the rows). Finally, it reshapes the result to a 2D array using `reshape(-1, 1)`. The `-1` in `reshape` means "infer this dimension from the other given dimensions", so it effectively turns the 1D array into a 2D array with one column.