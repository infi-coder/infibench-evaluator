It seems like you're trying to use a specific version of Java with Maven wrapper in your build process. If you're using a build system like Jenkins, Travis CI, or GitHub Actions, they usually provide a way to specify the Java version.

For example, in GitHub Actions, you can use the `setup-java` action to specify the Java version:

```yaml
steps:
- uses: actions/checkout@v2
- name: Set up JDK 1.8
  uses: actions/setup-java@v1
  with:
    java-version: 1.8
- name: Build with Maven
  run: ./mvnw clean install
```

In Jenkins, you can use the `Jenkinsfile` to specify the Java version:

```groovy
pipeline {
    agent any
    tools {
        jdk 'JDK 1.8'
    }
    stages {
        stage('Build') {
            steps {
                sh './mvnw clean install'
            }
        }
    }
}
```

In Travis CI, you can specify the Java version in the `.travis.yml` file:

```yaml
language: java
jdk:
  - openjdk8
script: ./mvnw clean install
```

If you're running the build on your local machine, you can set the `JAVA_HOME` environment variable to the path of the desired JDK before running the Maven wrapper command:

```bash
export JAVA_HOME=/path/to/jdk
./mvnw clean install
```

Remember to replace `/path/to/jdk` with the actual path to your desired JDK.