Currently, SwiftUI does not provide a built-in way to get the current scroll position of a `ScrollView`. The `ScrollViewReader` and `ScrollViewProxy` indeed only provide the `scrollTo` method, which allows you to programmatically set the scroll position, but not get it.

However, you can use `GeometryReader` to get the scroll position. Here is a simple example:

```swift
ScrollView {
    GeometryReader { geometry in
        Color.clear.preference(key: ScrollOffsetPreferenceKey.self, value: geometry.frame(in: .named("scrollView")).minY)
    }
    .frame(height: 0)

    // Your scroll content here
}

.onPreferenceChange(ScrollOffsetPreferenceKey.self) { offset in
    // You get the scroll offset here
}
```

In this example, `ScrollOffsetPreferenceKey` is a custom `PreferenceKey`. You need to define it like this:

```swift
struct ScrollOffsetPreferenceKey: PreferenceKey {
    static var defaultValue: CGFloat = .zero
    static func reduce(value: inout CGFloat, nextValue: () -> CGFloat) {
        value += nextValue()
    }
}
```

This is a workaround and may not work perfectly in all situations. Hopefully, future versions of SwiftUI will provide a more straightforward way to get the scroll position.