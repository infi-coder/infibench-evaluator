Your code seems correct and should work as expected. However, there are a few things you could check to troubleshoot the issue:

1. **Network Connection**: Ensure that your device/emulator has a proper internet connection. You can check this by trying to fetch data from another API or loading a webpage.

2. **API Endpoint**: Verify that the API endpoint you're using is correct and operational. You can test this by making a request to the API endpoint from a REST client like Postman or from your browser.

3. **Apollo Client Version**: There might be compatibility issues with the version of Apollo Client you're using. Try downgrading or upgrading the version.

4. **React Native Version**: Similarly, there might be compatibility issues with the version of React Native you're using. Try downgrading or upgrading the version.

5. **Error Handling**: It's possible that an error is occurring but not being logged. Try logging the error in a more detailed way:

    ```javascript
    if (error) {
        console.error('Error:', error);
        return <Text>Error :(</Text>;
    }
    ```

6. **Async/Await**: Although not necessary, you could try using async/await to handle the promise returned by `useQuery`.

7. **Apollo Server**: If you have control over the Apollo Server, check if there are any issues on the server side. The issue might not be with your React Native code at all.

8. **React Native Debugger**: Use React Native Debugger to inspect network requests and responses. This might give you more insight into what's going wrong.

9. **React Native Reanimated**: If you're using React Native Reanimated, there might be a conflict with Apollo Client. Try disabling React Native Reanimated to see if that resolves the issue.

10. **React Native Navigation**: If you're using React Native Navigation, there might be a conflict with Apollo Client. Try disabling React Native Navigation to see if that resolves the issue.

Remember, debugging is a process of elimination. Try to isolate the problem by testing each component of your code individually.