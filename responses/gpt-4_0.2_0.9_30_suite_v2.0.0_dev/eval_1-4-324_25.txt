Here is a function `mySplit` that uses the `strsplit` function to split the strings in the column `col1` of the dataframe `df` first by comma and then by colon. The function then creates a new dataframe with the split values.

```r
mySplit <- function(df) {
  # Split the strings in the column 'col1' by comma
  split_comma <- strsplit(df$col1, ",")
  
  # Initialize empty vectors for the new columns
  name <- vector()
  age <- vector()
  city <- vector()
  
  # Loop over the split strings
  for (i in split_comma) {
    # Split the strings by colon
    split_colon <- strsplit(i, ":")
    
    # Add the split values to the respective vectors
    name <- c(name, split_colon[[1]][2])
    age <- c(age, split_colon[[2]][2])
    city <- c(city, split_colon[[3]][2])
  }
  
  # Create a new dataframe with the split values
  new_df <- data.frame(name = name, Age = age, City = city)
  
  return(new_df)
}
```

Please note that this function assumes that the strings in the column `col1` are always in the format `name:value,Age:value,City:value`. If the format can vary, the function needs to be adjusted accordingly. Also, this function does not handle missing values (NA) in a special way. If you want to handle missing values in a specific way, you need to add this to the function.