Here is a function `mySplit` that uses the `strsplit` function to split the strings in `col1` by comma and colon, and then reshapes the data into a data frame:

```r
mySplit <- function(df) {
  # Split the strings in col1 by comma and colon
  split_strings <- strsplit(as.character(df$col1), ",|:")
  
  # Reshape the data into a data frame
  df_new <- do.call(rbind, lapply(split_strings, function(x) {
    data.frame(matrix(x, ncol = 2, byrow = TRUE)[, 2])
  }))
  
  # Set the column names
  colnames(df_new) <- c("name", "Age", "City")
  
  return(df_new)
}
```

You can use this function on your data frame `df` like this:

```r
df <- data.frame(col1 = c("name:Michael,Age:31,City:NYC", "name:Tom,Age:25,City:NA"))
df_new <- mySplit(df)
print(df_new)
```

This will print:

```r
     name Age City
1 Michael  31  NYC
2     Tom  25   NA
```

This function assumes that the strings in `col1` always have the same format, with the name, age, and city in the same order. If the order can vary, or if there can be missing values, you would need to modify the function to handle these cases.