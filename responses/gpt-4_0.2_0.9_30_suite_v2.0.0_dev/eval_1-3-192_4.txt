Here is a Python function that uses the `re` module to split the input string at either dashes or underscores, then uses the `str.capitalize()` method to capitalize the first letter of each word except the first one, and finally joins them together:

```python
import re

def to_camel_case(text):
    words = re.split('-|_', text)
    return words[0] + ''.join(word.capitalize() for word in words[1:])
```

This function works by first splitting the input string into a list of words. It then capitalizes the first letter of each word except the first one, and finally joins them together into a single string.

Here's how it works on your test cases:

```python
print(to_camel_case(''))  # ''
print(to_camel_case("the_stealth_warrior"))  # 'theStealthWarrior'
print(to_camel_case("The-Stealth-Warrior"))  # 'TheStealthWarrior'
print(to_camel_case("A-B-C"))  # 'ABC'
```

This function should work on any string that is delimited by dashes or underscores, and it correctly handles the case where the input string is empty.