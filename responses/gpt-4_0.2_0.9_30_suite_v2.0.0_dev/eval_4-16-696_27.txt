The issue is that the `$(echo {} | sed 's/\?.*//g')` part of your command is evaluated before the `find` command is run, so it doesn't have the expected effect. You need to use a shell command for each file found by `find` to ensure the renaming operation is done correctly.

Here's a corrected version of your command:

```bash
find . -type f -name '*\?*' -print0 | while IFS= read -r -d '' file; do mv "$file" "${file%%\?*}"; done
```

This command uses `find` to locate the files, then a `while` loop to rename each file. The `${file%%\?*}` expression removes the `?` and everything after it from the filename.

Please note that this command will overwrite files without asking if the destination file already exists. If you want to avoid this, you can add a check before the `mv` command.