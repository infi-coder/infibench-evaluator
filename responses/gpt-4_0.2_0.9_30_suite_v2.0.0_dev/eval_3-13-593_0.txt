To add Jetpack Compose to an existing project, follow these steps:

1. Update your project-level `build.gradle` file:

```groovy
buildscript {
    ext {
        compose_version = '1.0.5' // Check the latest version
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.4" // Check the latest version
    }
}
```

2. Update your module-level `build.gradle` file:

```groovy
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdk 31 // Check the latest version

    defaultConfig {
        minSdk 21
        targetSdk 31 // Check the latest version
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.5.31' // Check the latest version
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0' // Check the latest version
    implementation 'androidx.appcompat:appcompat:1.4.0' // Check the latest version
    implementation 'com.google.android.material:material:1.5.0-alpha05' // Check the latest version
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.0' // Check the latest version
    implementation 'androidx.activity:activity-compose:1.4.0' // Check the latest version
}
```

3. Sync your project with Gradle files.

4. Now you can start using Jetpack Compose in your project.

Remember to replace the versions with the latest ones available at the time you are adding Jetpack Compose to your project.