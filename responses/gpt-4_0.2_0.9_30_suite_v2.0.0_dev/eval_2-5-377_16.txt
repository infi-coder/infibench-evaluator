The problem you're facing is because you're trying to format a `LocalDate` object using `SimpleDateFormat` which is meant for `java.util.Date` objects. 

Also, `LocalDate` does not contain time information. You should use `LocalDateTime` instead.

Here is the corrected code:

```java
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import java.time.format.DateTimeFormatter;
import java.util.Random;

public class Main {
    public static void main(String[] args) {
        System.out.println(generateRandomDateAndTimeInString());
    }

    public static String generateRandomDateAndTimeInString() {
        LocalDateTime dateTime = LocalDateTime.now().minusDays(new Random().nextInt(365 * 70));
        System.out.println("date and time :: " + dateTime.toString());
        return formatDate(dateTime);
    }

    public static String formatDate(LocalDateTime dateTime){
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss'Z'");
        return dateTime.atZone(ZoneOffset.UTC).format(formatter);
    }
}
```

In this code, `LocalDateTime.now().minusDays(new Random().nextInt(365 * 70))` generates a random date and time in the past 70 years.

`DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss'Z'")` is used to format the date and time in the required format.

`dateTime.atZone(ZoneOffset.UTC).format(formatter)` converts the `LocalDateTime` to `ZonedDateTime` at UTC timezone and then formats it.