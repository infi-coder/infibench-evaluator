In Rust, you cannot set a field in a struct with an empty value. All fields in a struct must be initialized when the struct is created. 

However, you can use `Option<TcpStream>` for the `conn` field. The `Option` enum has two variants: `Some(T)` and `None`. You can use `None` to represent an empty value. 

Here's how you can modify your code:

```rust
use std::net::TcpStream;

pub struct FistClient {
    addr: String,
    conn: Option<TcpStream>,
}

impl FistClient {
    pub fn new(ip: &str, port: &str) -> Self {
        FistClient {
            addr: String::from(ip) + ":" + &String::from(port),
            conn: None,
        }
    }

    pub fn connect(&mut self) {
        let res = TcpStream::connect(&self.addr);
        match res {
            Ok(c) => self.conn = Some(c),
            Err(_) => panic!(),
        }
    }
}
```

In the `new` method, `conn` is initialized with `None`. In the `connect` method, `conn` is set to `Some(c)` if `TcpStream::connect` is successful.