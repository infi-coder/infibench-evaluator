The error you're seeing is because Python can't find the `app` module. This is likely due to the way your Dockerfile is set up. 

Here's a revised version of your Dockerfile:

```Dockerfile
# Use an official Python runtime as a parent image
FROM python:3.8

# Set the working directory in the container to /app
WORKDIR /app

# Add the current directory contents into the container at /app
ADD . /app

# Install any needed packages specified in requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Make port 8000 available to the world outside this container
EXPOSE 8000

# Run the command to start uvicorn
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
```

This Dockerfile will add the entire current directory (which should include your `app` directory) into the Docker container. Then it will install the Python dependencies listed in your `requirements.txt` file. Finally, it will start the uvicorn server.

Also, make sure your `docker-compose.yml` file is set up correctly. Here's an example:

```yaml
version: '3'
services:
  web:
    build: .
    ports:
      - "8000:8000"
```

This will build the Docker image using the Dockerfile in the current directory and map port 8000 from the container to port 8000 on your host machine.