Sure, you can use the `numpy.amax` function to find the maximum value along a specific axis. In your case, you want to find the maximum value in the third column of each 2D array in your 3D array. Here is the function you need:

```python
import numpy as np

def getMax(matrix):
    # Select the third column from each 2D array and find the max value
    max_values = np.amax(matrix[:,:,2], axis=1)
    # Reshape the result to a 2D array
    max_values = max_values.reshape(-1, 1)
    return max_values
```

This function works by first selecting the third column from each 2D array in the 3D array (using `matrix[:,:,2]`). It then finds the maximum value in each of these columns (using `np.amax(..., axis=1)`). Finally, it reshapes the result to a 2D array (using `max_values.reshape(-1, 1)`).

You can use this function like so:

```python
matrix = np.array([[[4, 1, 5, 2, 5, 5, 7, 8, 9, 7],
                    [7, 4, 2, 4, 7, 8, 4, 1, 3, 5],
                    [6, 1, 2, 1, 1, 1, 2, 3, 7, 6],
                    [5, 5, 5, 0, 5, 4, 3, 8, 7, 1],
                    [2, 8, 6, 7, 4, 7, 5, 5, 5, 1]],
                   
                   [[9, 9, 5, 8, 0, 7, 3, 9, 8, 1],
                    [9, 1, 9, 5, 7, 4, 5, 4, 7, 0],
                    [1, 0, 4, 8, 7, 3, 4, 3, 8, 8],
                    [8, 1, 3, 1, 7, 0, 9,