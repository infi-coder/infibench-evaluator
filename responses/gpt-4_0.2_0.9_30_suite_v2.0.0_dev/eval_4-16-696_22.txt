The problem is that the command substitution `$(echo {} | sed 's/\?.*//g')` is evaluated before `find` starts its execution, so it doesn't have the expected effect. You can use a bash loop to achieve your goal:

```bash
find . -type f -name '*\?*' | while read -r file; do mv "$file" "${file%%\?*}"; done
```

This command will find all files with a question mark in their name, read them line by line, and for each file, it will remove the question mark and everything after it. The `${file%%\?*}` syntax is a parameter expansion in bash that removes the longest match of `\?*` from the end of the `$file` variable.