Here is a function `mySplit` that uses the `strsplit` function to split the strings in your column by the commas and colons, and then reassembles the data into a data frame:

```r
mySplit <- function(df) {
  # Split the strings by comma
  split_comma <- strsplit(as.character(df$col1), ",")
  
  # Split the resulting strings by colon
  split_colon <- lapply(split_comma, function(x) strsplit(x, ":"))
  
  # Extract the names and values
  names <- sapply(split_colon, function(x) sapply(x, "[", 1))
  values <- sapply(split_colon, function(x) sapply(x, "[", 2))
  
  # Create a data frame from the names and values
  df_new <- as.data.frame(t(values), stringsAsFactors = FALSE)
  names(df_new) <- names[1, ]
  
  return(df_new)
}
```

You can use this function on your data frame like this:

```r
df <- data.frame(col1 = c("name:Michael,Age:31,City:NYC", "name:Tom,Age:25,City:NA"))
df_new <- mySplit(df)
```

This will give you a new data frame `df_new` with the split columns. Please note that this function assumes that all rows in your data frame have the same structure (i.e., the same names in the same order). If this is not the case, you will need to modify the function accordingly.