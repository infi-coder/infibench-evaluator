Here is a Python function that accomplishes this task:

```python
def ReplaceElementsByIndex(rest, b, last):
    # Create a dictionary where the keys are the first four elements of b and the values are the elements of rest
    replace_dict = dict(zip(b[:4], rest))
    
    # Replace the elements in last according to the replace_dict
    last = [replace_dict.get(i, i) for i in last]
    
    return last
```

This function works by first creating a dictionary where the keys are the first four elements of `b` and the values are the elements of `rest`. Then, it uses a list comprehension to replace the elements in `last` according to this dictionary. The `get` method of the dictionary is used to return the value for a given key if it exists in the dictionary, and if not, it returns the key itself. This ensures that elements in `last` that do not need to be replaced are left unchanged.

Here is how you can use this function with your example:

```python
rest=[5, 7, 11, 4]
b=[21, 22, 33, 31, 23, 15, 19, 13, 6]
last=[33, 19, 40, 21, 31, 22, 6, 15, 13, 23]

print(ReplaceElementsByIndex(rest, b, last))  # Output: [11, 19, 40, 5, 4, 7, 6, 15, 13, 23]
```