You can use `awk` to extract the language code. Here's an example:

```bash
curl -Ls stick-it.app | grep -o 'lang="[a-zA-Z-]*"' | head -1 | awk -F'"' '{print $2}'
```

This command does the following:

1. `curl -Ls stick-it.app` fetches the HTML of the page.
2. `grep -o 'lang="[a-zA-Z-]*"'` extracts all instances of `lang="..."` from the HTML. The `-o` option tells `grep` to only output the parts of the line that match the pattern.
3. `head -1` takes the first instance of `lang="..."`.
4. `awk -F'"' '{print $2}'` splits the string on the `"` character and prints the second field, which is the language code.

This command should work regardless of how the `lang` attribute is formatted in the HTML. It assumes that the language code consists of letters and hyphens, which should be true for most websites.