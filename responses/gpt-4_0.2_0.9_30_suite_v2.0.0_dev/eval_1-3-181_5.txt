Here is a Python function that does exactly what you described. It uses the NumPy library's `max` function to find the maximum value of the third column in each 2D array of the 3D array.

```python
import numpy as np

def getMax(matrix):
    # Get the third column from each 2D array and find the max value
    max_values = [np.max(arr[:,2]) for arr in matrix]
    
    # Convert the list of max values to a 2D NumPy array
    max_values = np.array(max_values).reshape(-1, 1)
    
    return max_values
```

You can use this function like so:

```python
matrix = np.array([[[4, 1, 5, 2, 5, 5, 7, 8, 9, 7],
                    [7, 4, 2, 4, 7, 8, 4, 1, 3, 5],
                    [6, 1, 2, 1, 1, 1, 2, 3, 7, 6],
                    [5, 5, 5, 0, 5, 4, 3, 8, 7, 1],
                    [2, 8, 6, 7, 4, 7, 5, 5, 5, 1]],
                   
                   [[9, 9, 5, 8, 0, 7, 3, 9, 8, 1],
                    [9, 1, 9, 5, 7, 4, 5, 4, 7, 0],
                    [1, 0, 4, 8, 7, 3, 4, 3, 8, 8],
                    [8, 1, 3, 1, 7, 0, 9, 9, 3, 8],
                    [4, 0, 2, 3, 8, 2, 0, 1, 2, 4]],
                   
                   [[1, 6, 2, 4, 4, 0, 2, 3, 0, 3],
                    [9, 6, 8