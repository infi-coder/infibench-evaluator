You can use the `strsplit` function in R to split the strings in your column. Here's a function `mySplit` that does this:

```r
mySplit <- function(df) {
  # Split the strings in the column by comma
  split_col <- strsplit(df$col1, ",")
  
  # Initialize an empty data frame to store the results
  result <- data.frame()
  
  # Loop over each row in the split column
  for (i in 1:length(split_col)) {
    # Split each element in the row by colon
    split_row <- strsplit(split_col[[i]], ":")
    
    # Convert the split row to a data frame and transpose it
    row_df <- data.frame(t(sapply(split_row, function(x) x[2])))
    
    # Set the column names of the row data frame
    colnames(row_df) <- sapply(split_row, function(x) x[1])
    
    # Bind the row data frame to the result data frame
    result <- rbind(result, row_df)
  }
  
  # Return the result data frame
  return(result)
}
```

This function works by first splitting the strings in the column by comma, then splitting each element in the resulting list by colon. The second element of each split element (after splitting by colon) is the value for the respective column, and the first element is the column name. The function then constructs a data frame for each row and binds them together to form the final result.

Please note that this function assumes that all rows in the column have the same format and that the column names are the same for all rows. If this is not the case, you may need to modify the function to handle the different formats.