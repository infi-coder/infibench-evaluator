Sure, you can use the `last:` variant provided by Tailwind CSS to target the last element in a list. Here is how you can modify your code:

```html
  <ul>
    <li
      v-for="(item, index) in items"
      :key="`item-${index}`"
      :class="{ 'border-b border-black': index !== items.length - 1 }"
      class="border-solid"
    >
      Item
    </li>
  </ul>
```

In this code, I'm using Vue's dynamic class binding (`:class`) to conditionally apply the `border-b border-black` classes only when the current item is not the last one in the list. The condition `index !== items.length - 1` will be `true` for all items except the last one, so the border will be applied to all items except the last one.

Please note that you need to enable the `last` variant in your Tailwind CSS configuration for some utilities if it's not enabled by default. You can do this in your `tailwind.config.js` file:

```javascript
module.exports = {
  variants: {
    extend: {
      borderColor: ['last'],
      borderWidth: ['last'],
    },
  },
  plugins: [],
}
```

This configuration will enable the `last` variant for the `borderColor` and `borderWidth` utilities.