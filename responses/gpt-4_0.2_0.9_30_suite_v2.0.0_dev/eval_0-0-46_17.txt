The error message you're seeing is from ESLint, which is having trouble reading your `tsconfig.json` file. The `project` property under `parserOptions` in your `.eslintrc.js` file is set to `"tsconfig.json"`, which means ESLint is looking for `tsconfig.json` in the same directory as `.eslintrc.js`.

If your `tsconfig.json` file is not in the same directory as your `.eslintrc.js` file, you'll need to provide the correct relative path. For example, if your `tsconfig.json` file is in the root directory of your project and your `.eslintrc.js` file is in a subdirectory, you would change the `project` property to `"../tsconfig.json"`.

If your `tsconfig.json` file is in the same directory as your `.eslintrc.js` file, then the problem might be with the contents of `tsconfig.json`. The contents you've posted look fine, but you might want to double-check for any syntax errors or misplaced commas.

If none of the above solutions work, you might want to try deleting your `node_modules` directory and running `npm install` again. Sometimes, dependencies can get into a weird state that can cause problems like this.

Here's how you can do it:

1. Delete the `node_modules` folder.
2. Delete the `package-lock.json` file.
3. Run `npm install`.

This will reinstall all your dependencies, which might fix the problem.