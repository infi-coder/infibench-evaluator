To create an index in Mongoose schema using Nest.js, you should use the `@Index()` decorator from the `@nestjs/mongoose` package. 

Here is how you can do it:

```javascript
import { Prop, Schema, SchemaFactory, Index } from '@nestjs/mongoose';
import { Document } from 'mongoose';

@Schema()
@Index({ type: 1 }) // This is where you define your index
export class MySchema extends Document {

  @Prop()
  _id: string;

  @Prop({required: true})
  type: string;

  @Prop()
  creationDate: string;

  @Prop()
  name: string;
}

export const MySchemaModel = SchemaFactory.createForClass(MySchema);
```

In the above code, `@Index({ type: 1 })` creates an index on the `type` field. The `1` in `{ type: 1 }` specifies an ascending index. If you want a descending index, you can use `-1`.

Please note that indexes are not created until the model is used. Mongoose automatically calls `createIndexes` the first time you save a document from that model. 

Also, ensure that your MongoDB server is running when you're trying to create an index. If it's not running, the index creation will fail silently.