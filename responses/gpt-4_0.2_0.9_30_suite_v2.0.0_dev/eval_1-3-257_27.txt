Here is a Python function that should solve your problem. This function first divides the number into equal parts and then distributes the remainder by adding 2 to each part in succession.

```python
def divideNumber(num, n):
    # Calculate the base value and the remainder
    base, rem = divmod(num, n)
    # Ensure the base value is a multiple of 2
    if base % 2 != 0:
        base -= 1
        rem += n
    # Create the result list with the base value
    result = [base] * n
    # Distribute the remainder
    i = 0
    while rem > 0:
        result[i] += 2
        rem -= 2
        i = (i + 1) % n
    return result
```

This function first calculates the base value and the remainder of the division. If the base value is not a multiple of 2, it is decreased by 1 and the remainder is increased by `n`. Then, the function creates a list with `n` elements, all equal to the base value. Finally, it distributes the remainder by adding 2 to each element in the list in succession, wrapping around to the beginning of the list when it reaches the end.

Here is how you can use this function with your example:

```python
num = 100
n = 3
print(divideNumber(num, n))  # Output: [34, 34, 32]
```