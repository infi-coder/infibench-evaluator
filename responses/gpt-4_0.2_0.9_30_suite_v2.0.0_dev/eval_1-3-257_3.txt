Here is a Python function that divides an even number into N parts each part being a multiple of 2. The function first calculates the base value for each part by integer division of the number by N. If the base value is not a multiple of 2, it is decreased by 1 and the remainder is increased by N. The remainder is then distributed among the parts by adding 2 to each part in succession until the remainder is exhausted.

```python
def divideNumber(num, n):
    base = num // n
    remainder = num % n

    # Ensure base is a multiple of 2
    if base % 2 != 0:
        base -= 1
        remainder += n

    # Create initial parts
    parts = [base] * n

    # Distribute remainder
    i = 0
    while remainder > 0:
        parts[i] += 2
        remainder -= 2
        i = (i + 1) % n

    return parts
```

You can test the function with your example:

```python
print(divideNumber(100, 3))  # Output: [34, 34, 32]
```

This function ensures that each part is a multiple of 2 and the sum of the parts equals the original number. The distribution of the remainder is done in a round-robin fashion, starting from the first part and wrapping around to the beginning when the end is reached.