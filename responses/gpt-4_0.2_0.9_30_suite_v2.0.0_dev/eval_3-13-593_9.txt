To add Jetpack Compose to your existing project, you need to update your project's `build.gradle` files.

1. Update the `build.gradle` file in the project level:

```groovy
buildscript {
    ext {
        compose_version = '1.0.5' // check for the latest version
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.4" // check for the latest version
    }
}
```

2. Update the `build.gradle` file in the app level:

```groovy
android {
    compileSdk 31 // or the latest version

    defaultConfig {
        minSdk 21 // or higher
    }

    buildFeatures {
        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
}

dependencies {
    implementation 'androidx.compose.ui:ui:1.0.5' // check for the latest version
    implementation 'androidx.compose.material:material:1.0.5' // check for the latest version
    implementation 'androidx.compose.ui:ui-tooling:1.0.5' // check for the latest version
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
}
```

3. Sync your project with Gradle files.

Now, you can start using Jetpack Compose in your existing project.